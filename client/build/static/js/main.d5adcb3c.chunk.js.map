{"version":3,"sources":["modules/Chat/index.js","music/index.js","libs/config.js","libs/index.js","components/Modal/index.js","actions/index.js","constants/index.js","components/BlurContainer/index.js","components/LoginForm/index.js","components/Message/index.js","components/ChatInput/index.js","modules/Statistics/index.js","modules/ClassSelector/index.js","modules/GameBar/index.js","containers/LoginModal/index.js","engine/index.js","Game.js","reducers/index.js","index.js"],"names":["Message","_ref","message","react_default","a","createElement","reactstrap_es","className","width","height","src","url","concat","name","text","_Component","Chat","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","value","handle","event","keyCode","setState","target","inherits","createClass","key","_this2","props","messages","map","id","Chat_Message","objectSpread","onKeyDown","onChange","handleOnChange","Component","defaultProps","click1","Howl","autoplay","volume","click2","hoverInit","hoverable","pressable","focusable","init","scale","boxShadow","hover","press","blur","transition","type","stiffness","focusInit","color","focus","withEventAnimation","config","Wrapper","posed","div","Cross","handler","onClick","JokedCross","funcs","x","reduceRight","f","compose","comp","Modal","joke","history","push","to","close","keyClose","closeKey","children","appear","isLogin","Modal_Cross","RoutedModal","withRouter","connect","dispatch","BlurContainer","style","is","kernel","filter","ConnectedComponent","selectName","payload","placeholder","position","placement","MessageContainer","nextProps","clearTimeout","setTimeout","time","react","MessageN","_this$props","Message_MessageContainer","components_Message_Message","PureComponent","Input","input","socket","postMessage","undefined","sendMessage","emit","MiddleIcon","Link","StatisticsItem","_ref2","score","Statistics_MiddleIcon","Message_MessageN","Statistics","_ref3","list","el","Statistics_StatisticsItem","race","HeroCard","Selected","selected","raceName","selectRace","choice","configs","description","urls","descriptions","ClassSelector_HeroCard","BigIcon","objectWithoutProperties","fluid","GameBar_BigIcon","ChatInput_ConnectedComponent","login","ClassSelector_ConnectedComponent","initConfig","alive","rules","Engine","canvas","cellSizeX","Math","floor","cellSizeY","shadowSize","min","_ctx","getContext","count","_currentLaw","loot","_power","onMouseCb","addConfig","setConfig","_configs$name","drawing","_cords","cords","y","addEventListener","_getCords","getCords","l","abs","intersection","removeEventListener","world","pageX","offsetLeft","pageY","offsetTop","draw","i","j","image","drawImage","draw1","shadow","beginPath","fillStyle","r","g","b","arc","PI","fill","use","getStatistics","setLoot","img","size","getPower","initPower","val","onMouse","cb","paint","clearRect","set","wrld","sounds","howlers","onend","play","Music","iconUrls","iconObj","blue","red","green","images","Image","forEach","Game","statistics","resize","engine","_canvas","current","change","sendMousePosition","parent","parentElement","clientWidth","clientHeight","Login","sendLoginInfo","createRef","io","initSocket","window","Route","exact","path","render","LoginModal_ConnectedComponent","components_BlurContainer_BlurContainer","ref","Statistics_Statistics","stats","GameBar_ConnectedComponent","on","players","newPlayers","showMessage","addSocket","showStatistics","initState","phrases","phrase","ReduxDevtoolsExtension","__REDUX_DEVTOOLS_EXTENSION__","noop","store","createStore","action","random","population","_action$payload","applyMiddleware","thunk","es","BrowserRouter","src_Game_0","document","getElementById"],"mappings":"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","file":"static/js/main.d5adcb3c.chunk.js","sourcesContent":["import React, {Fragment, Component} from 'react'\nimport './Chat.css'\nimport { Container, Input, Button } from 'reactstrap'\n\n\nconst Message = ({message}) => {\n\treturn(\n\t<Container className='d-flex'>\n\t\t<Container className='icon'>\n\t\t\t<img width='30px' height='30px' src={message.url}/>\n\t\t\t<p> {`${message.name}`} </p>\t\n\t\t</Container>\n\t\t<Container className='message'>\n\t\t\t<p> {`${message.text}`} </p>\n\t\t</Container>\n\t</Container>\n\t)\n}\n\nexport class Chat extends Component {\n\tstate = {\n\t\tvalue: '' \n\t}\n\thandle = event => {\n\t\tif (event.keyCode == 13){\n\t\t\tthis.setState({\n\t\t\t\tvalue:event.target.value\n\t\t\t})\n\t\t\tevent.target.value = ''\n\t\t}\n\t}\n\t\n\trender(){\n\t\treturn (\n\t\t\t\t<Container className='chat w-100'>\n\t\t\t\t\t<Container className='textarea'>\n\t\t\t\t\t\t{this.props.messages.map((message, id) =>  <Message key={id} message={{...message, text:this.state.value}}/>)}\n\t\t\t\t\t</Container>\n\t\t\t\t\t<Container className='input'>\n\t\t\t\t\t\t<Input onKeyDown={this.handle} onChange={this.handleOnChange}/>\n\t\t\t\t\t</Container>\n\t\t\t\t</Container>\n\t\t\t)\n\t\t}\n}\n\nChat.defaultProps = {\n\tmessages: []\n}\n\n","import { Howl } from 'howler'\n\nexport const click1 = () => {\n  const sounds = [\n    'music/1.mp3',\n  //  'music/2.mp3',\n  ]\n  const sound = new Howl({\n    src:sounds,\n    autoplay: true,\n    volume: 0.9,\n  });\n}\n\nexport const click2 = () => {\n  const sounds = [\n    'music/2.mp3',\n  //  'music/2.mp3',\n  ]\n  const sound = new Howl({\n    src:sounds,\n    autoplay: true,\n    volume: 0.9,\n  });\n}\n\n","const groupInit = {\n  enter: {\n    y: 0,\n    opacity: 1,\n    delay: 200,\n    transition: {\n      y: { type: \"spring\", stiffness: 800, damping: 10 },\n      default: { duration: 800 },\n    },\n  },\n  exit: {\n    y: 50,\n    opacity: 0,\n    transition: { duration: 350 },\n  },\n}\n\nconst fadeInit = {\n  enter: {\n    x: -50,\n    opacity: 1,\n    delay: 300,\n    transition: {\n      y: { type: \"spring\", stiffness: 1000, damping: 15 },\n      default: { duration: 300 },\n    },\n  },\n  exit: {\n    x: 50,\n    opacity: 0,\n    transition: { duration: 150 },\n  },\n}\n\nconst dragInit = {\n  draggable: true,\n}\n\nconst hoverInit = {\n  hoverable: true,\n  pressable: true,\n  focusable: true,\n  init: {\n    scale: 1,\n    boxShadow: \"0px 0px 0px rgba(0,0,0,0)\",\n  },\n  hover: {\n    scale: 1.03,\n    boxShadow: \"0px 10px 15px rgba(0,0,0,0.5)\",\n  },\n  press: {\n    scale: 1.04,\n    boxShadow: \"0px 2px 5px rgba(0,0,0,0.4)\",\n  },\n  blur: {\n    scale: 1,\n    transition: {\n      type: \"spring\",\n      stiffness: 800,\n    },\n  },\n}\n\nconst pressInit = {\n  pressable: true,\n  init: { scale: 1 },\n  press: { scale: 0.8 },\n}\n\nconst routerInit = {\n  enter: {\n    opacity: 1,\n    delay: 300,\n    beforeChildren: true,\n  },\n  exit: {\n    opacity: 0,\n  },\n}\n\nconst focusInit = {\n  focusable: true,\n  init: {\n    color: \"#ccc\",\n    scale: 1,\n  },\n  focus: {\n    color: \"#000\",\n    scale: 1.2,\n  },\n  blur: {\n    scale: 1,\n    transition: {\n      type: \"spring\",\n      stiffness: 900,\n    },\n  },\n}\n\nexport {\n  fadeInit,\n  routerInit,\n  dragInit,\n  hoverInit,\n  focusInit,\n  pressInit,\n  groupInit,\n}\n","import React from \"react\"\nimport posed, { PoseGroup } from \"react-pose\"\n// import PropTypes from 'prop-types'\nimport {\n  // fadeInit,\n  routerInit,\n  hoverInit,\n  focusInit,\n  dragInit,\n  pressInit,\n  groupInit,\n} from \"./config\"\nimport { Route } from \"react-router-dom\"\n\nconst withPageAnimation = Component => {\n  const Page = posed.div({\n    enter: { staggerChildren: 30 },\n  })\n  return props => {\n    return (\n      <Page>\n        <Component {...props} />\n      </Page>\n    )\n  }\n}\n\nconst withEnterExitAnimation = (Component, config = groupInit) => {\n  const Wrapper = posed.div(config)\n  return props => {\n    const is = typeof props.is == \"undefined\" ? true : props.is\n    return (\n      <PoseGroup>\n        {is && (\n          <Wrapper key=\"single-component-animation\">\n            <Component {...props} />\n          </Wrapper>\n        )}\n      </PoseGroup>\n    )\n  }\n}\n\nconst withFadeAnimation = (Component, config = groupInit) => {\n  const Wrapper = posed.div(config)\n  return props => {\n    return (\n      <Wrapper key=\"single-component-animation\">\n        <Component {...props} />\n      </Wrapper>\n    )\n  }\n}\n\nconst withEventAnimation = (Component, config) => {\n  const Wrapper = posed.div(config)\n  return props => {\n    return (\n      <Wrapper>\n        <Component {...props} />\n      </Wrapper>\n    )\n  }\n}\n\nconst withRouteAnimation = (Component, config = routerInit) => {\n  const RouteContainer = posed.div(config)\n  return props => {\n    return (\n      <Route\n        render={({ location }) => {\n          return (\n            <PoseGroup>\n              <RouteContainer key={location.pathname}>\n                <Component {...props} />\n              </RouteContainer>\n            </PoseGroup>\n          )\n        }}\n      />\n    )\n  }\n}\n\nconst withGroupAnimation = (ItemComponent, config = groupInit) => {\n  const Item = posed.li(config)\n  return ({ childrensProps, ...props }) => {\n    return (\n      <ul {...props}>\n        <PoseGroup>\n          {childrensProps.map(el => (\n            <Item key={el.key}>\n              {\" \"}\n              <ItemComponent {...el} />{\" \"}\n            </Item>\n          ))}\n        </PoseGroup>\n      </ul>\n    )\n  }\n}\n\nconst compose = (...funcs) => x => [...funcs].reduceRight((a, f) => f(a), x)\n// const curring = (f,...head) => (...tail) => f(...head, ...tail)\n\nconst withFocusAnimation = comp => withEventAnimation(comp, focusInit)\nconst withHoverAnimation = comp => withEventAnimation(comp, hoverInit)\nconst withPressAnimation = comp => withEventAnimation(comp, pressInit)\nconst Draggable = comp => withEventAnimation(comp, dragInit)\n\nexport {\n  compose,\n  Draggable,\n  withHoverAnimation,\n  withFocusAnimation,\n  withPressAnimation,\n  withEnterExitAnimation,\n  withEventAnimation,\n  withGroupAnimation,\n  withRouteAnimation,\n  withPageAnimation,\n  withFadeAnimation,\n}\n","import React, {Component}  from 'react'\nimport './Modal.css'\nimport {\n\tContainer\n} from 'reactstrap'\nimport {\n\tclick2\n} from '../../music'\nimport { Link, withRouter } from 'react-router-dom'\nimport {\n\tcompose, withHoverAnimation, withPressAnimation\n} from '../../libs'\nimport { connect } from 'react-redux'\nimport {\n\tirony,\n} from '../../actions'\n\nconst Cross = ({handler}) => <p className='modal-cross' onClick={handler}>\n\t\t\t\t\t \t\tX \n\t\t\t\t\t\t</p>\n\nconst JokedCross = compose(withHoverAnimation)(Cross)\n\nclass Modal extends Component {\n\thandler = () => {\t\n\t\tclick2()\n\t\tthis.props.joke()\n\t\tthis.props.history.push(this.props.to)\n\t\tthis.props.close()\n\t}\n\tkeyClose = event => {\n\t\tif (event.keyCode == this.props.closeKey){\n\t\t\tthis.handler()\n\t\t}\n\t}\n\trender(){\n\t\tconst { children } = this.props\n\t\treturn (  \n\t\t\tthis.props.appear &&\n\t\t\t<div onKeyDown={this.keyClose} className='modal-layer'>\n\t\t\t\t<Container className='inner-modal-layer'>\n\t\t\t\t\t{this.props.isLogin ? <Cross handler={this.handler} />: <JokedCross handler={this.handler} />}\n\t\t\t\t\t{ children }\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t\t)\n\t}\n}\nconst mapStateToProps = state => {\n\treturn {\n\t\tisLogin : state.isLogin\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tjoke: () => dispatch(irony())\n\t}\n}\n\n\nconst RoutedModal = withRouter(connect(mapStateToProps,mapDispatchToProps)(Modal))\n\nexport {\n\tRoutedModal as Modal\n}\n\n","import {\n\tSELECT_NAME,\n\tSELECT_RACE,\n\tSET_POPULATION_SIZE,\n\tPOST_MESSAGE,\n\tNEW_PLAYERS,\n\tADD_SOCKET,\n\tLOGIN,\n\tSHOW_STATISTICS,\n\tJOKE,\n\tIRONY\n} from '../constants'\n\nexport const selectRace = (name) => {\n\treturn {\n\t\ttype:SELECT_RACE,\n\t\tpayload: name\n\t}\n}\n\nexport const login = () => {\n\treturn {\n\t\ttype:LOGIN,\n\t}\n}\n\nexport const irony = () => {\n\treturn {\n\t\ttype:IRONY\n\t}\n}\n\n\n\nexport const sendMessage = (socket, message) => {\n\treturn dispatch => {\n\t\tsocket.emit('send-message', message)\n\t}\n}\n\nexport const joke = () => {\n\treturn {\n\t\ttype: JOKE\n\t}\n}\n\nexport const postMessage = (message, time = 2) => {\n\t\treturn {\n\t\t\ttype:POST_MESSAGE,\n\t\t\tpayload: message\n\t\t}\n}\n\n\nexport const selectName = (name) => {\n\treturn {\n\t\ttype:SELECT_NAME,\n\t\tpayload: name\n\t}\n}\n\n\n\nconst newPlayers = players => {\n\treturn {\n\t\ttype: NEW_PLAYERS,\n\t\tpayload: players\n\t}\n} \n\nconst showMessage = (config) => {\n\treturn {\n\t\ttype:'SHOW_MESSAGE',\n\t\tpayload: config\n\t}\n}\n\nconst addSocket = socket => {\n\t\treturn {\n\t\t\ttype: ADD_SOCKET,\n\t\t\tpayload: socket\n\t\t}\n}\n\nconst showStatistics = statistics => {\n\treturn {\n\t\ttype: SHOW_STATISTICS,\n\t\tpayload: statistics\n\t}\n}\n\nexport const initSocket = (socket, engine) => {\n\t\treturn dispatch => {\n\t\t\tsocket.on('new-players', players => {\n\t\t\t\t\tdispatch(newPlayers(players))\n\t\t\t})\n\t\t\tsocket.on('response-message', config => {\n\t\t\t\t\tdispatch(showMessage(config))\n\t\t\t})\n\t\t\tdispatch(addSocket(socket))\n\t\t\t\n\t\t\tsocket.on('render', world => {\n\t\t\t\tengine.set(world)\n\t\t\t\tengine.paint()\n\t\t\t})\n\t\t\tsocket.on('statistics', statistics => {\n\t\t\t\tdispatch(showStatistics(statistics))\n\t\t\t})\n\t\t}\n}\n\n\n//client-server async action\n\nexport const sendLoginInfo = (socket, config) => {\n\treturn dispatch => {\n\t\t\tsocket.emit('send-login-info', config)\n\t}\n}\n\nexport const sendMousePosition = (socket, x, y) => {\n\treturn dispatch => {\n\t\tconst config = {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t}\n\t\tsocket.emit('send-mouse-position', config)\n\t}\n}\n\n//server-client async action\n\n\n\n\n \n\n","export const SELECT_NAME = 'SELECT_NAME'\nexport const SELECT_RACE = 'SELECT_RACE'\nexport const SET_POPULATION_SIZE = 'SET_POPULATION_SIZE'\nexport const POST_MESSAGE = 'POST_MESSAGE'\nexport const NEW_PLAYERS = 'NEW_PLAYERS'\nexport const ADD_SOCKET = 'ADD_SOCKET'\nexport const LOGIN = 'LOGIN'\nexport const LOGOUT = 'LOGOUT'\nexport const SHOW_STATISTICS = 'SHOW_STATISTICS'\nexport const JOKE = 'JOKE'\nexport const IRONY = 'IRONY'","import React from 'react'\nimport './BlurContainer.css'\nconst blur = (kernel) => {\n\treturn {\n\t\tfilter:`blur(${kernel}px)`\n\t}\n}\n\nexport const BlurContainer = props => \n\t<div className='blur-container' style={ props.is ? blur(props.kernel) : {}}>\n\t\t{props.children}\n\t</div>\n\nBlurContainer.defaultProps = {\n\tkernel: 3\n}","import React, { Fragment, Component } from 'react'\nimport { Input, Container } from 'reactstrap'\nimport './LoginForm.css'\nimport { connect } from 'react-redux'\nimport { selectName } from '../../actions'\n\nconst LoginForm  = ({selectName}) => {\n\tconst handle = event => {\n\t\tif (event.keyCode == 13){\n\t\t\tselectName(event.target.value)\n\t\t\tevent.target.value = ''\n\t\t}\n\t}\n\treturn (\n\t\t\t<Container>\n\t\t\t\t<p className='text-center'> Бактериальное прозвище: </p>\n\t\t\t\t<Input  onKeyDown={handle} placeholder=\"Имя\"/>\n\t\t\t</Container>\n\t\t)\n\t}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tselectName: (name) => dispatch(selectName(name)) \n\t}\n}\n\nconst ConnectedComponent = connect(null, mapDispatchToProps)(LoginForm)\n\nexport{\n\tConnectedComponent as LoginForm\n}\n","import React, {Fragment, Component, PureComponent} from 'react'\nimport './Message.css'\nimport {\n\tContainer\n} from 'reactstrap'\n\n\nconst stl = (position) =>  {\n\tconst cls = (position === 'bottom') ? 'my_message-bottom': 'my_message-top'\n\treturn cls\n}\n\nconst Message = ({text, placement}) => {\n\treturn(\n\t\t<div className={`my_message ${stl(placement)}`} >\n\t\t\t<p className='discription-text'>{text}</p>\n\t\t</div>\n\t)\n}\n\n\nclass MessageContainer extends Component{\n\tstate = {\n\t\tis:false\n\t}\n\tcomponentWillReceiveProps(nextProps){\n\t\tif (nextProps.children !== this.props.children){\n\t\t\tthis.setState({is: true})\n\t\t}\n\t}\n\tcomponentDidUpdate(props, state){\n\t\t\tif (this.state.is){\n\t\t\t\tclearTimeout(this.id) \n\t\t\t\tthis.id = setTimeout(this.close, this.props.time)\n\t\t\t}\n\t}\n\n\tclose = () => this.setState({is: false})\n\n\trender(){\n\t\treturn(\n\t\t\t<Fragment>\n\t\t\t\t{this.state.is && this.props.children}\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\n\nclass MessageN extends PureComponent { \n\trender(){\n\t\tconst {text, placement} = this.props\n\t\treturn(\n\t\t\t<MessageContainer time={this.props.time}>\n\t\t\t\t<Message text={text} placement={placement}/>\n\t\t\t</MessageContainer>\n\t\t)\n\t}\n}\n\nMessageN.defaultProps = {\n\ttime: 4000\n}\n\nexport {\n\tMessageN as Message\n}","import React from 'react'\nimport './ChatInput.css'\nimport { connect } from 'react-redux'\nimport { postMessage, sendMessage } from '../../actions'\nimport { focusInit } from '../../libs/config'\nimport posed from 'react-pose'\nconst Input = posed.input(focusInit)\n\nconst ChatInput = ({postMessage, socket, sendMessage}) => {\n\tconst handle = event => {\n\t\tif (event.keyCode == 13){\n\t\t\tpostMessage(event.target.value)\n\t\t\tsendMessage(socket, event.target.value)\n\t\t\tevent.target.value = ''\n\t\t}\n\t}\n\treturn (\n\t\t<Input className='input-field' placeholder='ЧАТ' onKeyDown={handle}/>\n\t)\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tsocket: state.socket\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tpostMessage: message => dispatch(postMessage(message)),\n\t\tsendMessage: (socket, message) => dispatch(sendMessage(socket, message))\n\t}\n}\n\nconst ConnectedComponent = connect(mapStateToProps, mapDispatchToProps)(ChatInput)\n\nexport {\n\tConnectedComponent as ChatInput\n}","import React, {Fragment} from 'react'\nimport './Statistics.css'\nimport { Container } from 'reactstrap'\nimport { GameBar } from '../'\nimport { Message } from '../../components'\nimport { connect } from 'react-redux'\nimport { click1 } from '../../music'\nimport { Link } from 'react-router-dom'\n\nconst MiddleIcon = ({url, to}) => {\n\treturn (\n\t\t<Link to={to}>\n\t\t\t<img width='50px' height='50px' src={url}/>\n\t\t</Link>\n\t)\n}\n\nconst StatisticsItem = ({score, url, message}) => {\n\treturn (\n\t\t\t<Container onClick={click1} className='statistic-item'>\n\t\t\t\t<MiddleIcon url={url} to='/'/>\n\t\t\t\t<p> {score} </p>\n\t\t\t\t<Message placement='bottom' text={message} />\n\t\t\t</Container>\n\t)\n}\n\n\nconst StatisticsUnconnect = ({value, color,list, messages}) => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<ul className='statistics statistics-list'>\n\t\t\t\t{list.map((el, id) => <li key={id}> <StatisticsItem  message={messages[el.race]} score={el.score} url={el.url}/> </li>)}\t\t\t\n\t\t\t</ul>\n\t\t</Fragment>\n\t\t)\n}\n\n//\t\t\t<div className='game-bar' style={{height:value, background:color}}/> \n\nconst mapStateToProps = state => {\n\treturn {\n\t\tmessages: state.messages,\n\t}\n}\n\nconst Statistics = connect(mapStateToProps)(StatisticsUnconnect)\n\nexport {\n\tStatistics\n}\n","import React, { Fragment, Component } from 'react'\nimport {Container, Input, Label } from 'reactstrap'\nimport './ClassSelector.css'\nimport { connect } from 'react-redux'\nimport {\n\tselectRace\n} from '../../actions'\nimport {\n\tclick1\n} from '../../music'\n\n\nconst HeroCard = ({ url, onClick, selected}) => {\n\tconst Selected = selected ? 'heroes_selected': 'heroes'\n\treturn(\n\t\t\t<i onClick={onClick} className={Selected}>\n\t\t\t\t<img width='100px' height='100px' src={url}/>\n\t\t\t</i>\n\t)\n}\n\nconst raceName = ['blue','red', 'green']\n\n//здесь имена надо сделать\nconst  ClassSelector =  (props) => {\n\tconst choice = (id) => () => {\n\t\tclick1()\n\t\tprops.selectRace(raceName[id])\n\t}\n\t\tconst { configs, description } = props\n\t\tconst { urls, descriptions } = configs\n\t\treturn (\n\t\t\t<Container className='class-selector'>\n\t\t\t\t<Container className='class-selector__classes'>\n\t\t\t\t\t{ urls.map((url, id) => <HeroCard onClick={choice(id)} selected={raceName[id] === props.race} key={id} url={url}/>)}\n\t\t\t\t</Container>\n\t\t\t\t{ description &&\n\t\t\t\t\t<Container className='class-selector__description'>\n\t\t\t\t\t\t<p className='discription-text'>{descriptions[props.race]}</p>\n\t\t\t\t\t</Container>\n\t\t\t\t}\n\t\t\t</Container>\n\t\t)\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\trace: state.race\n\t}\n}\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\t\tselectRace: (name) =>  dispatch(selectRace(name))\n\t}\n}\n\nconst ConnectedComponent = connect(mapStateToProps, mapDispatchToProps)(ClassSelector)\n\nexport {\n\tConnectedComponent as ClassSelector\n}","import React, { Fragment } from 'react'\nimport './GameBar.css'\nimport { Input, Container, Button } from 'reactstrap'\nimport { connect } from 'react-redux'\nimport {\n\tMessage, ChatInput\n} from '../../components'\nimport { click1 } from '../../music'\nimport { Link } from 'react-router-dom'\nimport Text from './config'\nimport { joke } from '../../actions'\n\nconst BigIcon = ({onClick, url, to}) => {\n\treturn (\n\t\t<Link to ={to}>\n\t\t\t<img width='120px' onClick={onClick} height='120px' className='kok' src={url}/>\n\t\t</Link>\n\t)\n}\n\n\nconst GameBar = ({ url, text, ...props}) => {\n\tconst handle = (joke) => () => {\n\t\tclick1()\n\t\tjoke()\n\t}\n\treturn (\n\t\t<Container fluid className='game-bar_container'>\n\t\t\t<div className='game-bar-hero'>\n\t\t\t\t<BigIcon onClick={handle(props.joke)} url={url} to='/'/>\n \t\t\t\t<Message time={5000} placement='top' text={text}/>\n \t\t\t</div>\n\t\t\t<ChatInput/>\n\t\t</Container>\n\t)\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\ttext: state.message\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tjoke: () => dispatch(joke())\n\t}\n}\n\nconst ConnectedComponent = connect(mapStateToProps, mapDispatchToProps)(GameBar)\n\nexport {\n\tConnectedComponent as GameBar\n}\n\n","import React, {Fragment} from 'react'\nimport { connect } from 'react-redux'\nimport {\n  ClassSelector\n} from '../../modules'\nimport { \n  Modal,\n  LoginForm,\n} from '../../components'\nimport {\n  sendPlayerInfo\n} from '../../actions'\n\nconst InitModal = ({isLogin, login, configs, ...props}) => {\n  return (\n\t\t <Modal appear={true}  close={login} to='/game' closeKey={13}>\n          {!isLogin && <Fragment> \n                    <hr/>\n                        <LoginForm/>\n                    <hr/>\n                  </Fragment>} \n          <p className='text-center'>Раса: {props.race} </p>\n          <hr/>\n          <ClassSelector description configs={configs}/>\n          <hr/>\n      </Modal>\n\t)\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\trace: state.race\n\t}\n}\n\n\nconst ConnectedComponent = connect(mapStateToProps)(InitModal)\n\nexport {\n\tConnectedComponent as InitModal\n}\n\n\n\n","\nconst initConfig = {\n\t// может стоит делать его муртвым чтобы меньше рендерить?\n\talive: x => x >= 1,\n\trules: x => 0,\n\tname: 'init'\n}\n\nconst argmax = array => {\n\treturn array.length ? array.map((x, i) => [x, i]).reduce((r, a) => (a[0] > r[0] ? a : r))[1]: -1\n}\n\n\nconst Engine = (canvas) => {\n\tconst cellSizeX = Math.floor(canvas.width / 80)\n\tconst cellSizeY = Math.floor(canvas.height / 60)\n\tconst shadowSize = Math.min(cellSizeY, cellSizeX);\n\tconst w = 80\n\tconst h = 60\n\tconst _ctx = canvas.getContext('2d')\n\tconst configs = []\n\tlet _alive;\n\tlet _rules;\n\tlet count = 0\n\tlet _currentLaw = 'init'\n\tlet statistics = {}\n\tlet loot = []\n\tlet lootImg = ''\n\tlet _power = 0\n\tlet onMouseCb = (x) => x \n\tlet onEnemyMouse = (x) => x\n\n\tconst setLoot = ({img, size}) => {\n\t\tlootImg = img\n\t}\n\tconst addConfig = (config) => {\n\t\tconfigs[config.name] = { ...config, id: count++, count:0 }\n\t}\n\tconst setConfig = (name) => {\n\t\tconst { alive, rules} = configs[name]\n\t\t_alive = alive;\n\t\t_rules = rules\n\t\t_currentLaw = name\n\t}\n\n\taddConfig(initConfig)\n\tsetConfig(_currentLaw)\n\n\t//server\n\tconst lootSpawn = (time = 1000) => {\n\t\tconst spawn = () => {\n\t\t\tconst x = Math.random() * w * cellSizeX\n\t\t\tconst y = Math.random() * h * cellSizeY\n\t\t\t\tloot.push({x:x, y:y})\n\t\t\t\tlootSpawn(time)\n\t\t}\n\t\tsetTimeout(spawn, Math.random() * time)\n\t}\n\n\tconst drawLoot = () => {\n\t\tloot.forEach(({x,y}) => {  \n\t\t\t\t_ctx.drawImage(lootImg, x - 150, y - 80)\n\t\t})\n\t}\n\n\t//server\n\tconst intersection = (x, y) => {\n\t\tconst epsil = 50;\n\t\tloot = loot.filter(l => {\n\t\t\tconst cond = (Math.abs(l.x - x) + Math.abs(l.y - y)) > epsil\n\t\t\t//if (!cond) incPower()\n\t\t\treturn cond\n\t\t})\n\t}\n\tconst drawing = () => {\n\t\t\tconst {x ,y} = cords;\n\t\t\tonMouseCb(x, y)\n\t}\n\n\tconst init = () => {\n\t\t// удалить интервал\n\t\tcanvas.addEventListener('mousemove',(event) =>{\n\t\t\tconst {x, y} = getCords(event)\n\t\t\tcords = {x: Math.floor(x / cellSizeX), y: Math.floor(y / cellSizeY)}\n\t\t\tintersection(x, y)\n\t\t});\n\t\tcanvas.addEventListener('mousedown',(event) =>{\n\t\t\tdrawing()\n\t\t\tcanvas.addEventListener('mousemove', drawing);\n\t\t});\n\t\tcanvas.addEventListener('mouseup', () => {\n\t\t\tcanvas.removeEventListener('mousemove',drawing);\n\t\t});\n\t}\n\tinit()\n\n\tlet world = []\n\tlet cords = {}\n\t\n\tconst getCords = event => {\n\t\treturn {\n\t\t\tx:event.pageX - canvas.offsetLeft,\n\t\t\ty:event.pageY - canvas.offsetTop\n\t\t}\n\t}\n\tconst use = name => {\n\t\tsetConfig(name)\n\t}\n\n\tconst draw = (i, j) => {\n\t\tconst cell = world[i + j * w]\n\t\tconst id = cell.race\n\t\tconst image = configs[id].image\n\t\tif (image) _ctx.drawImage(image, i * cellSizeX, j * cellSizeY)\t\n\t}\n\tconst draw1 = (i, j) => {\n\t\tconst cell = world[i + j * w]\n\t\tconst id = cell.race\n\t\tconst shadow = configs[id].shadow\n\t\tif (shadow){\n\t\t\t_ctx.beginPath()\n\t\t\t_ctx.fillStyle = `rgba(${shadow.r},${shadow.g},${shadow.b},0.18)`\n\t\t\t_ctx.arc((i + 0.8)*cellSizeX, (j + 0.8)*cellSizeY, shadowSize, 0, 2*Math.PI)\n\t\t\t_ctx.fill()\n\t\t}\t\n\t}\n\n\tconst paint = () => {\n\t\t_ctx.clearRect(0, 0, canvas.width, canvas.height)\n\t\tfor (let i = 0; i < w; ++i){\n\t\t\tfor (let j = 0; j < h; ++j){\n\t\t\t\tworld[i + w*j].alive ?  draw(i,j):  draw1(i,j)\n\t\t\t}\n\t\t}\n\t}\n\n\tconst set = (wrld) => {\n\t\tworld = wrld\n\t}\n\tconst getStatistics = (name) => configs[name][count]\n\tconst getPower = () => _power\n\tconst initPower = (val) => _power = val \n\tconst onMouse = (cb) =>  onMouseCb = cb\n\treturn {\n\t\taddConfig,\n\t\tuse,\n\t\tgetStatistics,\n\t\tsetLoot,\n\t\tgetPower,\n\t\tinitPower,\n\t\tonMouse,\n\t\tpaint,\n\t\tset\n\t}\n}\n\n\n\n\nexport default Engine\n\n","import React, { createRef, Component, Fragment } from 'react';\nimport { connect } from 'react-redux'\nimport { Button, Container } from 'reactstrap'\nimport io from 'socket.io-client'\nimport { Route, withRouter } from 'react-router-dom'\nimport {Howl, Howler} from 'howler'\nimport './Game.css'\nimport {\n  Chat,\n  Statistics,\n  GameBar\n} from './modules'\nimport { \n  BlurContainer,\n} from './components'\n\nimport {\n  InitModal\n} from './containers'\n\nimport { \n  initSocket,\n  sendLoginInfo,\n  login,\n  sendMousePosition\n} from './actions'\n\nimport Engine from './engine'\n\nconst sounds = [\n  'music/Polyphia G.O.A.T. (Official Music Video).mp3',\n  'music/Polyphia – O.D..mp3',\n  'music/Polyphia - Crush.mp3'\n]\n\nconst Music = (sounds) => {\n  let id = 0;\n  const count = sounds.length\n  const howlers = sounds.map(x => new Howl({\n    src:x,\n    volume:0.9,\n    onend: function(){\n      id = (id + 1) % count\n      howlers[id].play()\n    }\n  }))\n  const play = () => howlers[0].play()\n  return {\n    play\n  }\n}\n\nMusic(sounds).play()\n\n\nconst iconUrls = ['./icon1.png','./icon2.png','./icon3.png']\nconst iconObj = {blue:'./icon1.png',red:'./icon2.png',green:'./icon3.png'}\nconst shadow = {'blue':{r:100,g:100,b:255},'red':{r:255,g:100,b:100},'green':{r:5,g:100,b:5}}\nconst urls = ['./hero1.png', './hero.png', './hero2.png', './waterbear.png']\nconst images = urls.map( url => new Image())\nimages.forEach((img, id) => img.src = urls[id])\n\nconst rules = [{name:'blue',image: images[0],shadow:shadow['blue']}, {name:'red', image:images[1],shadow:shadow['red']}, {name:'green', image:images[2],shadow:shadow['green']}]\n\nconst configs = {\n  urls: iconUrls,\n  descriptions: {blue:'супер быстрые',red:'супер сильные',green:\"супер плодовитые\"}\n}\n\n\nclass Game extends Component {\nstate = {\n  statistics: [],\n}\nconstructor(props){\n   super(props)\n   this._canvas = createRef()\n   this.engine = null\n}\ncomponentDidMount(){\n  this.init()\n  this.socket = io()\n  this.props.initSocket(this.socket, this.engine)\n  window.addEventListener('resize', this.init)\n}\ninit = () => {\n  this.resize()\n  this.engine = Engine(this._canvas.current)\n  rules.forEach(this.engine.addConfig)\n  this.change()\n  this.engine.onMouse((x,y) => this.props.sendMousePosition(this.socket, x, y))\n}\n\nresize = () => {\n  const parent = this._canvas.current.parentElement;\n  this._canvas.current.width = parent.clientWidth\n  this._canvas.current.height = parent.clientHeight\n}\n\nlogin = () => {\n  this.change()\n  this.props.Login()\n  this.props.sendLoginInfo(this.socket, this.props.config)\n}\n\nchange = () => {\n  this.engine.use(this.props.race)\n}\n\n  render(){\n    const { statistics } = this.state\n    const  color = shadow[this.props.race]\n    return (\n      <Fragment>\n        <Route exact path='/' render={ () => {\n            return <InitModal isLogin = {this.props.isLogin} login = {this.login} configs = {configs} />\n        }}/>\n        <BlurContainer  kernel={14} is={!this.props.isLogin}>\n          <div  className='h-100 w-100 background tools'>\n            <canvas  ref={this._canvas}/>\n            <Statistics color={`rgb(${color.r},${color.g},${color.b}`}  value={100}  list={this.props.stats}/>\n            <Container className='d-flex'>\n              <GameBar  url={iconObj[this.props.race]} />\n            </Container>\n          </div>\n        </BlurContainer>\n      </Fragment>\n    )\n  }\n}\n\n\n/*\n*/\n//Вернуть и очень много работы с engine\n\n\n//  <Statistics color={`rgb(${color.r},${color.g},${color.b}`}  value={statistics[this.props.race]} list={statistics} urls = {iconUrls}/>\n// <Button  color='danger' onClick={this.toggle()}> on </Button>\n\nconst mapStateToProps = state => {\n  return {\n    isLogin: state.isLogin,\n    race: state.race,\n    config: {\n      race: state.race,\n      name: state.name\n    },\n    stats:[\n      {race:'blue', url: iconUrls[0], score: state.statistics[0]},\n      {race:'red', url: iconUrls[1], score: state.statistics[1]},\n      {race:'green', url: iconUrls[2], score: state.statistics[2]}\n    ]\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initSocket: (socket, engine) => dispatch(initSocket(socket, engine)),\n    Login: () => dispatch(login()),\n    sendMousePosition: (socket, x, y) => dispatch(sendMousePosition(socket, x, y)),\n    sendLoginInfo: (socket, config) => dispatch(sendLoginInfo(socket, config)),\n  }\n}\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Game))\n\n","import {\n\tSELECT_RACE,\n\tSELECT_NAME,\n\tSET_POPULATION_SIZE,\n\tPOST_MESSAGE,\n\tNEW_PLAYERS,\n\tADD_SOCKET,\n\tLOGIN,\n\tLOGOUT,\n\tSHOW_STATISTICS,\n\tJOKE,\n\tIRONY\n} from '../constants'\n\nconst initState = {\n\trace: 'red',\n\tmessages: {},\n\tmessage: \"let's start\",\n\tisLogin: false,\n\tstatistics: [0,0,0]\n}\n\nconst phrases = [\n\t\"предатель!!!\", \n\t\"да,да брось нас в самый важный момент...\", \n\t\"трусливая букашка!!!\",\n\t\"От меня и то 'БОЛЬШЕ' толку\",\n\t\"Одноклеточное!!!\"\n\t]\nconst phrase = [\n\t\"Серьезно?! ты не можешь закрыть окно? А хочешь победить в 'бесконечной войне'?=)))\",\n\t\"Ну и глуповат ты...=)\",\n\t\"Молодец!!! ты это сделал!!!\"\n]\n\nconst rootReducer = (state = initState, action) => {\n\tswitch(action.type){\n\t\tcase SELECT_NAME:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tname: action.payload\n\t\t\t}\n\t\tcase JOKE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmessage: phrases[Math.floor(Math.random() * phrases.length)]\n\t\t\t}\n\t\tcase SHOW_STATISTICS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatistics: action.payload\n\t\t\t}\n\t\tcase LOGIN:\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tisLogin: true\n\t\t\t}\n\t\tcase IRONY:{\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmessage: !state.isLogin ? phrase[Math.floor(Math.random() * phrase.length)]: state.message\n\t\t\t}\n\t\t}\n\t\tcase LOGOUT:\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tisLogin: false\n\t\t\t}\n\t\tcase SELECT_RACE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trace: action.payload\n\t\t\t}\n\t\tcase NEW_PLAYERS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tplayers: action.payload\n\t\t\t}\n\t\tcase SET_POPULATION_SIZE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpopulation: action.payload\n\t\t\t}\n\t\tcase POST_MESSAGE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmessage: action.payload\n\t\t\t}\n\t\tcase ADD_SOCKET:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsocket: action.payload\n\t\t\t}\n\t\t\n\t\tcase 'SHOW_MESSAGE':\n\t\t\tconst {race, message} = action.payload\n\t\t\tconst messages = { ...state.messages } \n\t\t\tmessages[race] = message\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tmessages: messages\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\n\nexport {\n\trootReducer\n}","import React from 'react';\nimport { render } from 'react-dom';\nimport Game from './Game';\nimport { rootReducer } from './reducers'\nimport { Provider } from 'react-redux'\nimport { compose, createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk' \nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport 'bootstrap/dist/css/bootstrap.css'\n\n\nconst ReduxDevtoolsExtension = ( window.__REDUX_DEVTOOLS_EXTENSION__ ) ? window.__REDUX_DEVTOOLS_EXTENSION__() : noop => noop\n\n\nconst store = createStore(rootReducer,\n\tcompose(\n\t\tapplyMiddleware(thunk),\n\t\tReduxDevtoolsExtension\n\t)\n)\n\nstore.dispatch({type:'INIT'})\n\nrender(\n<Provider store={store}>\n\t<Router>\n\t\t<Game />\n\t</Router>\n</Provider>, \ndocument.getElementById('root'));"],"sourceRoot":""}