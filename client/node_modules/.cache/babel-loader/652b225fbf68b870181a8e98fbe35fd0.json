{"ast":null,"code":"import _objectSpread from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initConfig = {\n  // может стоит делать его муртвым чтобы меньше рендерить?\n  alive: function alive(x) {\n    return x >= 1;\n  },\n  rules: function rules(x) {\n    return 0;\n  },\n  name: 'init'\n};\n\nvar argmax = function argmax(array) {\n  return array.length ? array.map(function (x, i) {\n    return [x, i];\n  }).reduce(function (r, a) {\n    return a[0] > r[0] ? a : r;\n  })[1] : -1;\n};\n\nvar Engine = function Engine(canvas) {\n  var cellSizeX = Math.floor(canvas.width / 80);\n  var cellSizeY = Math.floor(canvas.height / 60);\n  var shadowSize = Math.min(cellSizeY, cellSizeX) * 1.8;\n  var w = 80;\n  var h = 60;\n\n  var _ctx = canvas.getContext('2d');\n\n  var configs = [];\n\n  var _alive;\n\n  var _rules;\n\n  var count = 0;\n  var _currentLaw = 'init';\n  var statistics = {};\n  var loot = [];\n  var lootImg = '';\n  var _power = 0;\n\n  var onMouseCb = function onMouseCb(x) {\n    return x;\n  };\n\n  var onEnemyMouse = function onEnemyMouse(x) {\n    return x;\n  };\n\n  var setLoot = function setLoot(_ref) {\n    var img = _ref.img,\n        size = _ref.size;\n    lootImg = img;\n  };\n\n  var addConfig = function addConfig(config) {\n    configs[config.name] = _objectSpread({}, config, {\n      id: count++,\n      count: 0\n    });\n  };\n\n  var setConfig = function setConfig(name) {\n    var _configs$name = configs[name],\n        alive = _configs$name.alive,\n        rules = _configs$name.rules;\n    _alive = alive;\n    _rules = rules;\n    _currentLaw = name;\n  };\n\n  addConfig(initConfig);\n  setConfig(_currentLaw); //server\n\n  var lootSpawn = function lootSpawn() {\n    var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1000;\n\n    var spawn = function spawn() {\n      var x = Math.random() * w * cellSizeX;\n      var y = Math.random() * h * cellSizeY;\n      loot.push({\n        x: x,\n        y: y\n      });\n      lootSpawn(time);\n    };\n\n    setTimeout(spawn, Math.random() * time);\n  };\n\n  var drawLoot = function drawLoot() {\n    loot.forEach(function (_ref2) {\n      var x = _ref2.x,\n          y = _ref2.y;\n\n      _ctx.drawImage(lootImg, x - 150, y - 80);\n    });\n  }; //server\n\n\n  var intersection = function intersection(x, y) {\n    var epsil = 50;\n    loot = loot.filter(function (l) {\n      var cond = Math.abs(l.x - x) + Math.abs(l.y - y) > epsil; //if (!cond) incPower()\n\n      return cond;\n    });\n  };\n\n  var drawing = function drawing() {\n    var _cords = cords,\n        x = _cords.x,\n        y = _cords.y;\n    onMouseCb(x, y);\n  };\n\n  var init = function init() {\n    // удалить интервал\n    canvas.addEventListener('mousemove', function (event) {\n      var _getCords = getCords(event),\n          x = _getCords.x,\n          y = _getCords.y;\n\n      cords = {\n        x: Math.floor(x / cellSizeX),\n        y: Math.floor(y / cellSizeY)\n      };\n      intersection(x, y);\n    });\n    canvas.addEventListener('mousedown', function (event) {\n      drawing();\n      canvas.addEventListener('mousemove', drawing);\n    });\n    canvas.addEventListener('mouseup', function () {\n      canvas.removeEventListener('mousemove', drawing);\n    });\n  };\n\n  init();\n  var world = [];\n  var cords = {};\n\n  var getCords = function getCords(event) {\n    return {\n      x: event.pageX - canvas.offsetLeft,\n      y: event.pageY - canvas.offsetTop\n    };\n  };\n\n  var use = function use(name) {\n    setConfig(name);\n  };\n\n  var draw = function draw(i, j) {\n    var cell = world[i + j * w];\n    var id = cell.race;\n    var image = configs[id].image;\n    if (image) _ctx.drawImage(image, i * cellSizeX, j * cellSizeY);\n  };\n\n  var draw1 = function draw1(i, j) {\n    var cell = world[i + j * w];\n    var id = cell.race;\n    var shadow = configs[id].shadow;\n\n    if (shadow) {\n      _ctx.beginPath();\n\n      _ctx.fillStyle = \"rgba(\".concat(shadow.r, \",\").concat(shadow.g, \",\").concat(shadow.b, \",0.23)\");\n\n      _ctx.arc((i + 0.8) * cellSizeX, (j + 0.8) * cellSizeY, shadowSize, 0, 2 * Math.PI);\n\n      _ctx.fill();\n    }\n  };\n\n  var paint = function paint() {\n    _ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    for (var i = 0; i < w; ++i) {\n      for (var j = 0; j < h; ++j) {\n        draw1(i, j);\n      }\n    }\n  };\n\n  var set = function set(wrld) {\n    world = wrld;\n  };\n\n  var getStatistics = function getStatistics(name) {\n    return configs[name][count];\n  };\n\n  var getPower = function getPower() {\n    return _power;\n  };\n\n  var initPower = function initPower(val) {\n    return _power = val;\n  };\n\n  var onMouse = function onMouse(cb) {\n    return onMouseCb = cb;\n  };\n\n  return {\n    addConfig: addConfig,\n    use: use,\n    getStatistics: getStatistics,\n    setLoot: setLoot,\n    getPower: getPower,\n    initPower: initPower,\n    onMouse: onMouse,\n    paint: paint,\n    set: set\n  };\n};\n\nexport default Engine;","map":{"version":3,"sources":["/home/efimenko/Рабочий стол/alive-empire-game/client/src/engine/index.js"],"names":["initConfig","alive","x","rules","name","argmax","array","length","map","i","reduce","r","a","Engine","canvas","cellSizeX","Math","floor","width","cellSizeY","height","shadowSize","min","w","h","_ctx","getContext","configs","_alive","_rules","count","_currentLaw","statistics","loot","lootImg","_power","onMouseCb","onEnemyMouse","setLoot","img","size","addConfig","config","id","setConfig","lootSpawn","time","spawn","random","y","push","setTimeout","drawLoot","forEach","drawImage","intersection","epsil","filter","l","cond","abs","drawing","cords","init","addEventListener","event","getCords","removeEventListener","world","pageX","offsetLeft","pageY","offsetTop","use","draw","j","cell","race","image","draw1","shadow","beginPath","fillStyle","g","b","arc","PI","fill","paint","clearRect","set","wrld","getStatistics","getPower","initPower","val","onMouse","cb"],"mappings":"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","sourcesContent":["\nconst initConfig = {\n\t// может стоит делать его муртвым чтобы меньше рендерить?\n\talive: x => x >= 1,\n\trules: x => 0,\n\tname: 'init'\n}\n\nconst argmax = array => {\n\treturn array.length ? array.map((x, i) => [x, i]).reduce((r, a) => (a[0] > r[0] ? a : r))[1]: -1\n}\n\n\nconst Engine = (canvas) => {\n\tconst cellSizeX = Math.floor(canvas.width / 80)\n\tconst cellSizeY = Math.floor(canvas.height / 60)\n\tconst shadowSize = Math.min(cellSizeY,cellSizeX) * 1.8;\n\tconst w = 80\n\tconst h = 60\n\tconst _ctx = canvas.getContext('2d')\n\tconst configs = []\n\tlet _alive;\n\tlet _rules;\n\tlet count = 0\n\tlet _currentLaw = 'init'\n\tlet statistics = {}\n\tlet loot = []\n\tlet lootImg = ''\n\tlet _power = 0\n\tlet onMouseCb = (x) => x \n\tlet onEnemyMouse = (x) => x\n\n\tconst setLoot = ({img, size}) => {\n\t\tlootImg = img\n\t}\n\tconst addConfig = (config) => {\n\t\tconfigs[config.name] = { ...config, id: count++, count:0 }\n\t}\n\tconst setConfig = (name) => {\n\t\tconst { alive, rules} = configs[name]\n\t\t_alive = alive;\n\t\t_rules = rules\n\t\t_currentLaw = name\n\t}\n\n\taddConfig(initConfig)\n\tsetConfig(_currentLaw)\n\n\t//server\n\tconst lootSpawn = (time = 1000) => {\n\t\tconst spawn = () => {\n\t\t\tconst x = Math.random() * w * cellSizeX\n\t\t\tconst y = Math.random() * h * cellSizeY\n\t\t\t\tloot.push({x:x, y:y})\n\t\t\t\tlootSpawn(time)\n\t\t}\n\t\tsetTimeout(spawn, Math.random() * time)\n\t}\n\n\tconst drawLoot = () => {\n\t\tloot.forEach(({x,y}) => {  \n\t\t\t\t_ctx.drawImage(lootImg, x - 150, y - 80)\n\t\t})\n\t}\n\n\t//server\n\tconst intersection = (x, y) => {\n\t\tconst epsil = 50;\n\t\tloot = loot.filter(l => {\n\t\t\tconst cond = (Math.abs(l.x - x) + Math.abs(l.y - y)) > epsil\n\t\t\t//if (!cond) incPower()\n\t\t\treturn cond\n\t\t})\n\t}\n\tconst drawing = () => {\n\t\t\tconst {x ,y} = cords;\n\t\t\tonMouseCb(x, y)\n\t}\n\n\tconst init = () => {\n\t\t// удалить интервал\n\t\tcanvas.addEventListener('mousemove',(event) =>{\n\t\t\tconst {x, y} = getCords(event)\n\t\t\tcords = {x: Math.floor(x / cellSizeX), y: Math.floor(y / cellSizeY)}\n\t\t\tintersection(x, y)\n\t\t});\n\t\tcanvas.addEventListener('mousedown',(event) =>{\n\t\t\tdrawing()\n\t\t\tcanvas.addEventListener('mousemove', drawing);\n\t\t});\n\t\tcanvas.addEventListener('mouseup', () => {\n\t\t\tcanvas.removeEventListener('mousemove',drawing);\n\t\t});\n\t}\n\tinit()\n\n\tlet world = []\n\tlet cords = {}\n\t\n\tconst getCords = event => {\n\t\treturn {\n\t\t\tx:event.pageX - canvas.offsetLeft,\n\t\t\ty:event.pageY - canvas.offsetTop\n\t\t}\n\t}\n\tconst use = name => {\n\t\tsetConfig(name)\n\t}\n\n\tconst draw = (i, j) => {\n\t\tconst cell = world[i + j * w]\n\t\tconst id = cell.race\n\t\tconst image = configs[id].image\n\t\tif (image) _ctx.drawImage(image, i * cellSizeX, j * cellSizeY)\t\n\t}\n\tconst draw1 = (i, j) => {\n\t\tconst cell = world[i + j * w]\n\t\tconst id = cell.race\n\t\tconst shadow = configs[id].shadow\n\t\tif (shadow){\n\t\t\t_ctx.beginPath()\n\t\t\t_ctx.fillStyle = `rgba(${shadow.r},${shadow.g},${shadow.b},0.23)`\n\t\t\t_ctx.arc((i + 0.8)*cellSizeX, (j + 0.8)*cellSizeY, shadowSize, 0, 2*Math.PI)\n\t\t\t_ctx.fill()\n\t\t}\t\n\t}\n\n\tconst paint = () => {\n\t\t_ctx.clearRect(0, 0, canvas.width, canvas.height)\n\t\tfor (let i = 0; i < w; ++i){\n\t\t\tfor (let j = 0; j < h; ++j){\n\t\t\t\tdraw1(i,j)\n\t\t\t}\n\t\t}\n\t}\n\n\tconst set = (wrld) => {\n\t\tworld = wrld\n\t}\n\tconst getStatistics = (name) => configs[name][count]\n\tconst getPower = () => _power\n\tconst initPower = (val) => _power = val \n\tconst onMouse = (cb) =>  onMouseCb = cb\n\treturn {\n\t\taddConfig,\n\t\tuse,\n\t\tgetStatistics,\n\t\tsetLoot,\n\t\tgetPower,\n\t\tinitPower,\n\t\tonMouse,\n\t\tpaint,\n\t\tset\n\t}\n}\n\n\n\n\nexport default Engine\n\n"]},"metadata":{},"sourceType":"module"}