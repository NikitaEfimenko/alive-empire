{"ast":null,"code":"import _objectSpread from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar initConfig = {\n  alive: function alive() {\n    return true;\n  },\n  rules: function rules(prev) {\n    return prev;\n  },\n  name: 'init'\n};\n\nvar Engine = function Engine(canvas) {\n  var cellSize = 4;\n  var w = Math.floor(canvas.width / cellSize);\n  var h = Math.floor(canvas.height / cellSize);\n\n  var _ctx = canvas.getContext('2d');\n\n  var configs = [];\n\n  var _alive;\n\n  var _rules;\n\n  var _currentLaw = 0;\n  addConfig(initConfig);\n\n  var drawing = function drawing() {\n    var _cords = cords,\n        x = _cords.x,\n        y = _cords.y;\n    world[x + y * w].setState(1);\n    draw(x, y);\n  };\n\n  var init = function init() {\n    canvas.addEventListener('mousemove', function (event) {\n      var _getCords = getCords(event),\n          x = _getCords.x,\n          y = _getCords.y;\n\n      cords = {\n        x: Math.floor(x / cellSize),\n        y: Math.floor(y / cellSize)\n      };\n    });\n    canvas.addEventListener('mousedown', function (event) {\n      drawing();\n      canvas.addEventListener('mousemove', drawing);\n    });\n    canvas.addEventListener('mouseup', function () {\n      canvas.removeEventListener('mousemove', drawing);\n    });\n  };\n\n  init();\n\n  var Cell = function Cell(state) {\n    var law = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'init';\n    return function (index) {\n      var j = Math.floor(index / w);\n      var i = index % w;\n      var _law = law;\n\n      var c = function c(i, j) {\n        var _i = i < 0 ? 0 : i < w ? i : w - i;\n\n        var _j = j < 0 ? 0 : j < h ? j : h - j;\n\n        return _i + _j * w;\n      };\n\n      var _state = state;\n\n      var setState = function setState(s) {\n        return _state = s;\n      };\n\n      var getState = function getState() {\n        return _state;\n      };\n\n      var getLaw = function getLaw() {\n        return _law;\n      };\n\n      var siblings = function siblings() {\n        return [world[c(i - 1, j - 1)], world[c(i - 1, j)], world[c(i - 1, j + 1)], world[c(i, j - 1)], world[c(i, j + 1)], world[c(i + 1, j - 1)], world[c(i + 1, j)], world[c(i + 1, j + 1)]];\n      };\n\n      return {\n        getState: getState,\n        siblings: siblings,\n        index: index,\n        setState: setState,\n        getLaw: getLaw\n      };\n    };\n  };\n\n  var world = _toConsumableArray(Array(w * h).keys()).map(Cell(0));\n\n  var cords = {};\n\n  var setConfig = function setConfig(name) {\n    var _configs$name = configs[name],\n        alive = _configs$name.alive,\n        rules = _configs$name.rules;\n    _alive = alive;\n    _rules = rules;\n    _currentLaw = name;\n  };\n\n  var addConfig = function addConfig(_ref) {\n    var name = _ref.name,\n        config = _objectWithoutProperties(_ref, [\"name\"]);\n\n    configs[name] = _objectSpread({}, config, {\n      id: configs.length\n    });\n  };\n\n  var getCords = function getCords(event) {\n    return {\n      x: event.pageX - canvas.offsetLeft,\n      y: event.pageY - canvas.offsetTop\n    };\n  };\n\n  var next = function next(cell) {\n    var prev = cell.getState();\n    setConfig(cell.getLaw());\n    var res = cell.siblings().reduce(function (a, x) {\n      return a + x;\n    });\n    return Cell(_rules(prev, res, _alive))(cell.index);\n  };\n\n  var epoch = function epoch() {\n    world = world.map(next);\n  };\n\n  var draw = function draw(i, j) {\n    var state = world[i + j * w].getState();\n    var id = configs[world[i + j * w].getLaw()].id;\n\n    _ctx.beginPath();\n\n    _ctx.fillStyle = \"rgb(\".concat(state * id * 30, \",\").concat(state * id * 50, \",\").concat(state * id * 180, \")\");\n\n    _ctx.arc(i * cellSize, j * cellSize, cellSize / 2, 0, Math.PI * 2);\n\n    _ctx.fill();\n  };\n\n  var render = function render() {\n    epoch();\n\n    _ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    for (var i = 0; i < w; ++i) {\n      for (var j = 0; j < h; ++j) {\n        if (_alive(world[i + j * w].getState())) {\n          draw(i, j);\n        }\n      }\n    }\n  };\n\n  return {\n    render: render,\n    setConfig: setConfig\n  };\n};\n\nexport default Engine;","map":{"version":3,"sources":["/home/efimenko/Рабочий стол/alive-empire-game/src/engine/index.js"],"names":["initConfig","alive","rules","prev","name","Engine","canvas","cellSize","w","Math","floor","width","h","height","_ctx","getContext","configs","_alive","_rules","_currentLaw","addConfig","drawing","cords","x","y","world","setState","draw","init","addEventListener","event","getCords","removeEventListener","Cell","state","law","index","j","i","_law","c","_i","_j","_state","s","getState","getLaw","siblings","Array","keys","map","setConfig","config","id","length","pageX","offsetLeft","pageY","offsetTop","next","cell","res","reduce","a","epoch","beginPath","fillStyle","arc","PI","fill","render","clearRect"],"mappings":"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","sourcesContent":["\nconst initConfig = {\n\talive: () => true,\n\trules: prev => prev,\n\tname: 'init'\n}\n\nconst Engine = (canvas) => {\n\tconst cellSize = 4\n\tconst w = Math.floor(canvas.width / cellSize)\n\tconst h = Math.floor(canvas.height / cellSize)\n\tconst _ctx = canvas.getContext('2d')\n\t\n\tconst configs = []\n\tlet _alive;\n\tlet _rules;\n\tlet _currentLaw = 0;\n\t\n\taddConfig(initConfig)\n\n\tconst drawing = () => {\n\t\tconst {x ,y} = cords;\n\t\tworld[x + y * w].setState(1)\n\t\tdraw(x, y)\n\t}\n\t\tconst init = () => {\n\t\tcanvas.addEventListener('mousemove',(event) =>{\n\t\t\tconst {x, y} = getCords(event)\n\t\t\tcords = {x: Math.floor(x / cellSize), y: Math.floor(y / cellSize)}\n\t\t});\n\t\tcanvas.addEventListener('mousedown',(event) =>{\n\t\t\tdrawing()\n\t\t\tcanvas.addEventListener('mousemove', drawing);\n\t\t});\n\t\tcanvas.addEventListener('mouseup', () => {\n\t\t\tcanvas.removeEventListener('mousemove',drawing);\n\t\t});\n\t}\n\tinit()\n\n\tconst Cell = (state, law = 'init') => (index) => {\n\t\tconst j = Math.floor(index / w)\n\t\tconst i = index % w\n\t\tconst _law = law;\n\t\tconst c = (i, j) => {\n\t\t\tconst _i = i < 0 ? 0: i < w ? i : w - i\n\t\t\tconst _j = j < 0 ? 0: j < h ? j : h - j\n\t\t\treturn _i + _j * w\n\t\t}\n\t\tlet _state = state;\n\t\tconst setState = (s) => _state = s\n\t\tconst getState = () => _state\n\t\tconst getLaw = () => _law\n\t\tconst siblings = () => [\n\t\t\tworld[c(i - 1, j - 1)],\n\t\t\tworld[c(i - 1, j)],\n\t\t\tworld[c(i - 1, j + 1)],\n\t\t\tworld[c(i, j - 1)],\n\t\t\tworld[c(i, j + 1)],\n\t\t\tworld[c(i + 1, j - 1)],\n\t\t\tworld[c(i + 1, j)],\n\t\t\tworld[c(i + 1, j + 1)]\n\t\t] \n\t\treturn {\n\t\t\tgetState,\n\t\t\tsiblings,\n\t\t\tindex,\n\t\t\tsetState,\n\t\t\tgetLaw,\n\t\t}\n\t}\n\tlet world = [...Array(w*h).keys()].map(Cell(0))\n\tlet cords = {}\n\n\tconst setConfig = (name) =>{\n\t\t const { alive, rules } = configs[name]\n\t\t _alive = alive;\n\t\t _rules = rules\n\t\t _currentLaw = name\n\t}\n\tconst addConfig = ({ name, ...config }) => {\n\t\tconfigs[name] = { ...config, id: configs.length }\n\t}\n\n\t\n\tconst getCords = event => {\n\t\treturn {\n\t\t\tx:event.pageX - canvas.offsetLeft,\n\t\t\ty:event.pageY - canvas.offsetTop\n\t\t}\n\t}\n\n\tconst next = (cell) => {\n\t\tconst prev = cell.getState()\n\t\tsetConfig(cell.getLaw())\n\t\tconst res =  cell.siblings().reduce((a,x) => a + x)\n\t\treturn Cell(_rules(prev, res, _alive))(cell.index)\n\t}\n\n\tconst epoch = () => {\n\t\tworld = world.map(next)\n\t}\n\n\tconst draw = (i, j) => {\n\t\tconst state = world[i + j * w].getState()\n\t\tconst id = configs[world[i + j * w].getLaw()].id\n\t\t_ctx.beginPath()\n\t\t_ctx.fillStyle = `rgb(${ state * id * 30 },${ state * id * 50 },${ state * id *180 })`\n\t\t_ctx.arc(i*cellSize,j*cellSize,cellSize / 2, 0, Math.PI * 2)\n\t\t_ctx.fill()\t\n\t}\n\n\tconst render = () =>  {\n\t\tepoch()\n\t\t_ctx.clearRect(0, 0, canvas.width, canvas.height)\n\t\tfor (let i = 0; i < w; ++i){\n\t\t\tfor (let j = 0; j < h; ++j){\n\t\t\t\tif (_alive(world[i + j*w].getState())) {\n\t\t\t\t\tdraw(i,j)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn {\n\t\trender,\n\t\tsetConfig\n\t}\n}\n\n\n\n\nexport default Engine\n\n"]},"metadata":{},"sourceType":"module"}