{"ast":null,"code":"import _classCallCheck from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/src/Game.js\";\nimport React, { createRef, Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Container } from 'reactstrap';\nimport { plus, minus } from './actions';\nimport './Game.css';\nimport { Statistics, Chat } from './components';\nimport Engine from './engine'; //rules for bonus \n\nvar alive1 = function alive1(x) {\n  return x >= 1;\n};\n\nvar rules1 = function rules1(prev, res, alive) {\n  if (alive(prev)) {\n    if (res == 2 || res == 3) {\n      return prev + 2;\n    } else {\n      return res - prev < 0;\n    }\n  } else {\n    return res == 3;\n  }\n};\n\nvar alive3 = function alive3(x) {\n  return x == 1;\n};\n\nvar rules3 = function rules3(prev, res, alive) {\n  if (alive(prev)) {\n    if (res == 2 || res == 3) {\n      return 1;\n    } else {\n      return 0;\n    }\n  } else {\n    return res == 3;\n  }\n};\n\nvar alive2 = function alive2(x) {\n  return x >= 1;\n};\n\nvar rules2 = function rules2(prev, res, alive) {\n  if (alive(prev)) {\n    if (res == 1 || res == 4) {\n      return prev + 1;\n    } else {\n      return res - prev < 0;\n    }\n  } else {\n    if (res == 4) {\n      return 2;\n    } else {\n      return 0;\n    }\n  }\n};\n\nvar urls = ['./hero.png', './hero1.png', './hero2.png'];\nvar images = urls.map(function (url) {\n  return new Image();\n});\nimages.forEach(function (img, id) {\n  return img.src = urls[id];\n});\nvar rules = [{\n  alive: alive3,\n  rules: rules3,\n  name: 'andromeda',\n  image: images[0]\n}, {\n  alive: alive3,\n  rules: rules3,\n  name: 'milkyway',\n  image: images[1]\n}, {\n  alive: alive3,\n  rules: rules3,\n  name: 'milsa',\n  image: images[2]\n}];\n\nvar Game =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Game, _Component);\n\n  function Game(props) {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n    _this.state = {\n      statistics: []\n    };\n\n    _this.init = function () {\n      _this.resize();\n\n      _this.engine = Engine(_this._canvas.current);\n      rules.forEach(_this.engine.addConfig);\n    };\n\n    _this.resize = function () {\n      var parent = _this._canvas.current.parentElement;\n      _this._canvas.current.width = parent.clientWidth;\n      _this._canvas.current.height = parent.clientHeight;\n    };\n\n    _this.toggle = function () {\n      var isOn = false;\n      var id = null;\n      return function () {\n        isOn = !isOn;\n\n        if (isOn) {\n          id = setInterval(function () {\n            _this.engine.render();\n\n            _this.setState({\n              statistics: _this.engine.getStatistics()\n            });\n          }, 100);\n        } else {\n          clearInterval(id);\n        }\n      };\n    };\n\n    _this.change = function (num) {\n      return function () {\n        _this.engine.use(num);\n      };\n    };\n\n    _this._canvas = createRef();\n    _this.engine = null;\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.init();\n      window.addEventListener('resize', this.init);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var statistics = this.state.statistics;\n      return React.createElement(\"div\", {\n        className: \"h-100 w-100 background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        ref: this._canvas,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(Container, {\n        className: \"tools\",\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Statistics, {\n        list: statistics,\n        urls: urls,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(Chat, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"debug\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"danger\",\n        onClick: this.toggle(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \" on \"), React.createElement(Button, {\n        color: \"success\",\n        onClick: this.change(1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \" hero1 \"), React.createElement(Button, {\n        color: \"success\",\n        onClick: this.change(2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \" hero2 \"), React.createElement(Button, {\n        color: \"success\",\n        onClick: this.change(3),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \" hero3 \")));\n    }\n  }]);\n\n  return Game;\n}(Component);\n/*\n  background: rgba(0,0,0,0.7);\n  filter: blur(4px);\n*/\n\n\nexport default Game;","map":{"version":3,"sources":["/home/efimenko/Рабочий стол/alive-empire-game/src/Game.js"],"names":["React","createRef","Component","Fragment","connect","Button","Container","plus","minus","Statistics","Chat","Engine","alive1","x","rules1","prev","res","alive","alive3","rules3","alive2","rules2","urls","images","map","url","Image","forEach","img","id","src","rules","name","image","Game","props","state","statistics","init","resize","engine","_canvas","current","addConfig","parent","parentElement","width","clientWidth","height","clientHeight","toggle","isOn","setInterval","render","setState","getStatistics","clearInterval","change","num","use","window","addEventListener"],"mappings":"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","sourcesContent":["import React, { createRef, Component, Fragment } from 'react';\nimport { connect } from 'react-redux'\nimport { Button, Container } from 'reactstrap'\nimport {\n  plus,\n  minus\n} from './actions'\nimport './Game.css'\nimport { \n  Statistics,\n  Chat \n} from './components'\nimport Engine from './engine'\n\n//rules for bonus \n  const alive1 = x => x >= 1\n\n  const rules1 = (prev, res, alive) => {\n    if (alive(prev)){\n      if (res ==  2 || res == 3 ){\n        return prev + 2\n      }\n      else {\n        return (res - prev < 0)\n      }\n    }\n    else{\n        return (res == 3)\n    }\n  }\n\n  const alive3 = x => x == 1\n\n  const rules3 = (prev, res, alive) => {\n    if (alive(prev)){\n      if (res == 2 || res == 3 ){\n        return 1\n      }\n      else {\n        return 0\n      }\n    }\n    else{\n        return (res == 3)\n    }\n  }\n\n  const alive2 = x => x >= 1\n\n  const rules2 = (prev, res, alive) => {\n    if (alive(prev)){\n      if (res == 1 || res == 4 ){\n        return prev + 1\n      }\n      else {\n        return (res - prev < 0)\n      }\n    }\n    else{\n        if (res == 4){\n        return 2\n      }\n      else {\n        return 0\n      }\n    }\n  }\n\nconst urls = ['./hero.png', './hero1.png', './hero2.png']\nconst images = urls.map( url => new Image())\nimages.forEach((img, id) => img.src = urls[id])\n\n\nconst rules = [{alive:alive3, rules:rules3, name:'andromeda',image: images[0]}, {alive:alive3, rules:rules3,name:'milkyway', image:images[1]}, {alive:alive3, rules:rules3, name:'milsa',image:images[2]}]\n\nclass Game extends Component {\nstate = {\n  statistics: []\n}\nconstructor(props){\n   super(props)\n   this._canvas = createRef()\n   this.engine = null\n}\ncomponentDidMount(){\n  this.init()\n  window.addEventListener('resize', this.init)\n}\ninit = () => {\n  this.resize()\n  this.engine = Engine(this._canvas.current)\n  rules.forEach(this.engine.addConfig)\n}\n\nresize = () => {\n  const parent = this._canvas.current.parentElement;\n  this._canvas.current.width = parent.clientWidth\n  this._canvas.current.height = parent.clientHeight\n}\n\ntoggle = () => {\n  let isOn = false;\n  let id = null\n  return () => {\n    isOn = !isOn\n    if (isOn) {\n      id = setInterval(()=>{\n        this.engine.render()\n        this.setState({\n          statistics:this.engine.getStatistics()\n        })\n      }, 100)\n    }\n    else{\n      clearInterval(id)\n    }\n  }\n}\n\nchange = (num) => () => {\n  this.engine.use(num)\n}\n\n\nrender(){\n  const { statistics } = this.state\n  return (\n      <div  className='h-100 w-100 background'>\n        <canvas  ref={this._canvas}>\n        </canvas>\n        <Container className='tools' fluid>\n          <Statistics list={statistics} urls = {urls}/>\n          <Chat/>\n        </Container>\n        <div className='debug'>\n         <Button  color='danger' onClick={this.toggle()}> on </Button>\n          <Button  color='success' onClick={this.change(1)}> hero1 </Button>\n          <Button  color='success' onClick={this.change(2)}> hero2 </Button>\n          <Button  color='success' onClick={this.change(3)}> hero3 </Button>\n        </div>\n      </div>\n  )\n}\n}\n\n/*\n  background: rgba(0,0,0,0.7);\n  filter: blur(4px);\n*/\n\n\nexport default Game\n\n"]},"metadata":{},"sourceType":"module"}