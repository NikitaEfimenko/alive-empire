{"ast":null,"code":"import _classCallCheck from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/client/src/components/Modal/index.js\";\nimport React, { Component } from 'react';\nimport './Modal.css';\nimport { Container } from 'reactstrap';\nimport { click2 } from '../../music';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose, withHoverAnimation, withPressAnimation } from '../../libs';\nimport { connect } from 'react-redux';\nimport { postMessage } from '../../actions';\n\nvar Cross = function Cross(_ref) {\n  var handler = _ref.handler;\n  return React.createElement(\"p\", {\n    className: \"modal-cross\",\n    onClick: handler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"X\");\n};\n\nvar JokedCross = compose(withHoverAnimation)(Cross);\n\nvar Modal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Modal, _Component);\n\n  function Modal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Modal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Modal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handler = function () {\n      click2();\n\n      _this.props.joke();\n\n      _this.props.history.push(_this.props.to);\n\n      _this.props.close();\n    };\n\n    _this.keyClose = function (event) {\n      if (event.keyCode == _this.props.closeKey) {\n        _this.handler();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Modal, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return this.props.appear && React.createElement(\"div\", {\n        onKeyDown: this.keyClose,\n        className: \"modal-layer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Container, {\n        className: \"inner-modal-layer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, this.props.isLogin ? React.createElement(Cross, {\n        handler: this.handler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }) : React.createElement(JokedCross, {\n        handler: this.handler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), children));\n    }\n  }]);\n\n  return Modal;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLogin: state.isLogin\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  var phrase = \"Серьезно?! ты не можешь закрыть окно? А хочешь победить в 'бесконечной войне'?=)))\";\n  return {\n    joke: function joke(time) {\n      return dispatch(postMessage(phrase, time));\n    }\n  };\n};\n\nvar RoutedModal = withRouter(connect(mapStateToProps, mapDispatchToProps)(Modal));\nexport { RoutedModal as Modal };","map":{"version":3,"sources":["/home/efimenko/Рабочий стол/alive-empire-game/client/src/components/Modal/index.js"],"names":["React","Component","Container","click2","Link","withRouter","compose","withHoverAnimation","withPressAnimation","connect","postMessage","Cross","handler","JokedCross","Modal","props","joke","history","push","to","close","keyClose","event","keyCode","closeKey","children","appear","isLogin","mapStateToProps","state","mapDispatchToProps","dispatch","phrase","time","RoutedModal"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAO,aAAP;AACA,SACCC,SADD,QAEO,YAFP;AAGA,SACCC,MADD,QAEO,aAFP;AAGA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SACCC,OADD,EACUC,kBADV,EAC8BC,kBAD9B,QAEO,YAFP;AAGA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACCC,WADD,QAEO,eAFP;;AAIA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAEC,OAAF,QAAEA,OAAF;AAAA,SAAe;AAAG,IAAA,SAAS,EAAC,aAAb;AAA2B,IAAA,OAAO,EAAEA,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AAAA,CAAd;;AAIA,IAAMC,UAAU,GAAGP,OAAO,CAACC,kBAAD,CAAP,CAA4BI,KAA5B,CAAnB;;IAEMG,K;;;;;;;;;;;;;;;;;;UACLF,O,GAAU,YAAM;AACfT,MAAAA,MAAM;;AACN,YAAKY,KAAL,CAAWC,IAAX;;AACA,YAAKD,KAAL,CAAWE,OAAX,CAAmBC,IAAnB,CAAwB,MAAKH,KAAL,CAAWI,EAAnC;;AACA,YAAKJ,KAAL,CAAWK,KAAX;AACA,K;;UACDC,Q,GAAW,UAAAC,KAAK,EAAI;AACnB,UAAIA,KAAK,CAACC,OAAN,IAAiB,MAAKR,KAAL,CAAWS,QAAhC,EAAyC;AACxC,cAAKZ,OAAL;AACA;AACD,K;;;;;;;6BACO;AAAA,UACCa,QADD,GACc,KAAKV,KADnB,CACCU,QADD;AAEP,aACC,KAAKV,KAAL,CAAWW,MAAX,IACA;AAAK,QAAA,SAAS,EAAE,KAAKL,QAArB;AAA+B,QAAA,SAAS,EAAC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,mBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,KAAKN,KAAL,CAAWY,OAAX,GAAqB,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAE,KAAKf,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArB,GAAuD,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAE,KAAKA,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADzD,EAEGa,QAFH,CADD,CAFD;AASA;;;;EAvBkBxB,S;;AAyBpB,IAAM2B,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAChC,SAAO;AACNF,IAAAA,OAAO,EAAGE,KAAK,CAACF;AADV,GAAP;AAGA,CAJD;;AAMA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACtC,MAAMC,MAAM,GAAG,oFAAf;AACA,SAAO;AACNhB,IAAAA,IAAI,EAAE,cAACiB,IAAD;AAAA,aAAUF,QAAQ,CAACrB,WAAW,CAACsB,MAAD,EAASC,IAAT,CAAZ,CAAlB;AAAA;AADA,GAAP;AAGA,CALD;;AAQA,IAAMC,WAAW,GAAG7B,UAAU,CAACI,OAAO,CAACmB,eAAD,EAAiBE,kBAAjB,CAAP,CAA4ChB,KAA5C,CAAD,CAA9B;AAEA,SACCoB,WAAW,IAAIpB,KADhB","sourcesContent":["import React, {Component}  from 'react'\nimport './Modal.css'\nimport {\n\tContainer\n} from 'reactstrap'\nimport {\n\tclick2\n} from '../../music'\nimport { Link, withRouter } from 'react-router-dom'\nimport {\n\tcompose, withHoverAnimation, withPressAnimation\n} from '../../libs'\nimport { connect } from 'react-redux'\nimport {\n\tpostMessage\n} from '../../actions'\n\nconst Cross = ({handler}) => <p className='modal-cross' onClick={handler}>\n\t\t\t\t\t \t\tX \n\t\t\t\t\t\t</p>\n\nconst JokedCross = compose(withHoverAnimation)(Cross)\n\nclass Modal extends Component {\n\thandler = () => {\t\n\t\tclick2()\n\t\tthis.props.joke()\n\t\tthis.props.history.push(this.props.to)\n\t\tthis.props.close()\n\t}\n\tkeyClose = event => {\n\t\tif (event.keyCode == this.props.closeKey){\n\t\t\tthis.handler()\n\t\t}\n\t}\n\trender(){\n\t\tconst { children } = this.props\n\t\treturn (  \n\t\t\tthis.props.appear &&\n\t\t\t<div onKeyDown={this.keyClose} className='modal-layer'>\n\t\t\t\t<Container className='inner-modal-layer'>\n\t\t\t\t\t{this.props.isLogin ? <Cross handler={this.handler} />: <JokedCross handler={this.handler} />}\n\t\t\t\t\t{ children }\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t\t)\n\t}\n}\nconst mapStateToProps = state => {\n\treturn {\n\t\tisLogin : state.isLogin\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\tconst phrase = \"Серьезно?! ты не можешь закрыть окно? А хочешь победить в 'бесконечной войне'?=)))\"\n\treturn {\n\t\tjoke: (time) => dispatch(postMessage(phrase, time))\n\t}\n}\n\n\nconst RoutedModal = withRouter(connect(mapStateToProps,mapDispatchToProps)(Modal))\n\nexport {\n\tRoutedModal as Modal\n}\n\n"]},"metadata":{},"sourceType":"module"}