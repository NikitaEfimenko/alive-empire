{"ast":null,"code":"import _readOnlyError from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\n\nvar Engine = function Engine(canvas, config) {\n  var w = canvas.width;\n  var h = canvas.height;\n\n  var _ctx = canvas.getContext('2d');\n\n  var cellSize = 5;\n  var world = Array(w * h).keys().map(Cell());\n  var cords = {};\n\n  var getCords = function getCords(event) {\n    return {\n      x: event.pageX - canvas.offsetLeft,\n      y: event.pageY - canvas.offsetTop\n    };\n  };\n\n  var drawing = function drawing() {\n    var _cords = cords,\n        x = _cords.x,\n        y = _cords.y;\n    draw(x, y);\n    world[x + y * w].setState(1);\n  };\n\n  var init = function init() {\n    canvas.addEventListener('mousemove', function (event) {\n      var _getCords = getCords(event),\n          x = _getCords.x,\n          y = _getCords.y;\n\n      cords = {\n        x: Math.floor(x / cellSize),\n        y: Math.floor(y / cellSize)\n      };\n    });\n    canvas.addEventListener('mousedown', function (event) {\n      drawing();\n      canvas.addEventListener('mousemove', drawing);\n    });\n    canvas.addEventListener('mouseup', function () {\n      canvas.removeEventListener('mousemove', drawing);\n    });\n  };\n\n  var Cell = function Cell(state) {\n    return function (index) {\n      var j = Math.floor(index / w);\n      var i = index % w;\n      var state = state;\n\n      var setState = function setState(s) {\n        return state = (_readOnlyError(\"state\"), s);\n      };\n\n      var getState = function getState() {\n        return state;\n      };\n\n      var siblings = function siblings() {\n        return [world[(i, j)]];\n      };\n\n      return {\n        getState: getState,\n        siblings: siblings,\n        index: index,\n        setState: setState\n      };\n    };\n  };\n\n  var rules = function rules(prev, res) {\n    return res === 2 || res === 3;\n  };\n\n  var next = function next(cell) {\n    var prev = cell.getState();\n\n    var res = _dot(cell.siblings, Array(8).fill(1));\n\n    return Cell(rules(prev, res)(cell.index));\n  };\n\n  var epoch = function epoch() {\n    world = world.map(next);\n  };\n\n  var _dot = function _dot(v1, v2) {\n    return v1.reduce(function (a, x, i) {\n      return a + x * v2[i];\n    });\n  };\n\n  var draw = function draw(i, j) {\n    var state = world[i + j * w].getState();\n\n    _ctx.beginPath();\n\n    _ctx.fillStyle(\"rgb(\".concat(state, \",\").concat(state, \",\").concat(state, \")\"));\n\n    _ctx.arc(x * sellSize, y * sellSize, sellSize, 0, 2 * Math.PI);\n\n    _ctx.fill();\n  };\n\n  var render = function render() {\n    epoch();\n\n    _ctx.clearRect(0, 0, w, h);\n\n    for (var i = 0; i < w; ++i) {\n      for (var j = 0; j < h; ++j) {\n        draw(i, j);\n      }\n    }\n\n    requestAnimationFrame(render);\n  };\n\n  return {\n    render: render\n  };\n};\n\nexport default Engine;","map":{"version":3,"sources":["/home/efimenko/Рабочий стол/alive-empire-game/src/engine/index.js"],"names":["Engine","canvas","config","w","width","h","height","_ctx","getContext","cellSize","world","Array","keys","map","Cell","cords","getCords","event","x","pageX","offsetLeft","y","pageY","offsetTop","drawing","draw","setState","init","addEventListener","Math","floor","removeEventListener","state","index","j","i","s","getState","siblings","rules","prev","res","next","cell","_dot","fill","epoch","v1","v2","reduce","a","beginPath","fillStyle","arc","sellSize","PI","render","clearRect","requestAnimationFrame"],"mappings":"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","sourcesContent":["\n\nconst Engine = (canvas, config) => {\n\tconst w = canvas.width\n\tconst h = canvas.height\n\tconst _ctx = canvas.getContext('2d')\n\tconst cellSize = 5\n\tlet world = Array(w*h).keys().map(Cell())\n\tlet cords = {}\n\tconst getCords = event => {\n\t\treturn {\n\t\t\tx:event.pageX - canvas.offsetLeft,\n\t\t\ty:event.pageY - canvas.offsetTop\n\t\t}\n\t}\n\n\tconst drawing = () => {\n\t\tconst {x ,y} = cords;\n\t\tdraw(x, y)\n\t\tworld[x + y * w].setState(1)\n\t}\n\n\tconst init = () => {\n\t\tcanvas.addEventListener('mousemove',(event) =>{\n\t\t\tconst {x, y} = getCords(event)\n\t\t\tcords = {x: Math.floor(x/cellSize), y: Math.floor(y/cellSize)}\n\t\t});\n\t\tcanvas.addEventListener('mousedown',(event) =>{\n\t\t\tdrawing()\n\t\t\tcanvas.addEventListener('mousemove', drawing);\n\t\t});\n\t\tcanvas.addEventListener('mouseup', () => {\n\t\t\tcanvas.removeEventListener('mousemove',drawing);\n\t\t});\n\t}\n\n\tconst Cell = (state) => (index) => {\n\t\tconst j = Math.floor(index / w)\n\t\tconst i = index % w\n\t\tconst state = state;\n\t\tconst setState = (s) => state = s\n\t\tconst getState = () => state\n\t\tconst siblings = () => [\n\t\t\t\t\t\t\t\t\t\t\tworld[i, j]]\n\t\treturn {\n\t\t\tgetState,\n\t\t\tsiblings,\n\t\t\tindex,\n\t\t\tsetState\n\t\t}\n\t}\n\n\tconst rules = (prev, res) => {\n\t\treturn (res === 2 || res === 3)  \n\t}\n\tconst next = (cell) => {\n\t\tconst prev = cell.getState()\n\t\tconst res =  _dot(cell.siblings, Array(8).fill(1))\n\t\treturn Cell(rules(prev, res)(cell.index))\n\t}\n\n\tconst epoch = () => {\n\t\tworld = world.map(next)\n\t}\n\tconst _dot = (v1, v2) => v1.reduce((a, x, i) => a + x * v2[i])\n\t\n\tconst draw = (i, j) => {\n\t\tconst state = world[i + j*w].getState()\n\t\t_ctx.beginPath();\n\t\t_ctx.fillStyle(`rgb(${state},${state},${state})`)\n\t\t_ctx.arc(x*sellSize,y*sellSize,sellSize,0,2 * Math.PI)\n\t\t_ctx.fill()\n\t}\n\n\tconst render = () => {\n\t\tepoch()\n\t\t_ctx.clearRect(0, 0, w, h)\n\t\tfor (let i = 0; i < w; ++i){\n\t\t\tfor (let j = 0; j < h; ++j){\n\t\t\t\tdraw(i,j)\n\t\t\t}\n\t\t}\n\t\trequestAnimationFrame(render)\n\t}\n\treturn {\n\t\trender\n\t}\n}\n\n\n\n\nexport default Engine\n\n"]},"metadata":{},"sourceType":"module"}