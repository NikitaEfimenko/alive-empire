{"ast":null,"code":"import _classCallCheck from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/client/src/Game.js\";\nimport React, { createRef, Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Container } from 'reactstrap';\nimport io from 'socket.io-client';\nimport { Route, withRouter } from 'react-router-dom';\nimport { Howl, Howler } from 'howler';\nimport './Game.css';\nimport { Chat, Statistics, GameBar } from './modules';\nimport { BlurContainer } from './components';\nimport { InitModal } from './containers';\nimport { initSocket as _initSocket, sendLoginInfo as _sendLoginInfo, login, sendMousePosition as _sendMousePosition } from './actions';\nimport Engine from './engine';\n\nvar playSounds = function playSounds() {\n  var sounds = ['music/Polyphia G.O.A.T. (Official Music Video).mp3', 'music/Polyphia – O.D..mp3', 'music/Polyphia - Crush.mp3'];\n  var sound = new Howl({\n    src: sounds,\n    autoplay: true,\n    volume: 0.9\n  });\n}; //playSounds()\n//rules for bonus \n\n\nvar alive1 = function alive1(x) {\n  return x >= 1;\n};\n\nvar rules1 = function rules1(prev, res, alive) {\n  if (alive(prev)) {\n    if (res == 2 || res == 3) {\n      return prev + 2;\n    } else {\n      return res - prev < 0;\n    }\n  } else {\n    return res == 3;\n  }\n};\n\nvar alive3 = function alive3(x) {\n  return x == 1;\n};\n\nvar rules3 = function rules3(prev, res, alive) {\n  if (alive(prev)) {\n    if (res == 2 || res == 3) {\n      return 1;\n    } else {\n      return 0;\n    }\n  } else {\n    return res == 3;\n  }\n};\n\nvar alive2 = function alive2(x) {\n  return x >= 1;\n};\n\nvar rules2 = function rules2(prev, res, alive) {\n  if (alive(prev)) {\n    if (res == 1 || res == 4) {\n      return prev + 1;\n    } else {\n      return res - prev < 0;\n    }\n  } else {\n    if (res == 4) {\n      return 2;\n    } else {\n      return 0;\n    }\n  }\n};\n\nvar iconUrls = ['./icon1.png', './icon2.png', './icon3.png'];\nvar iconObj = {\n  blue: './icon1.png',\n  red: './icon2.png',\n  green: './icon3.png'\n};\nvar shadow = {\n  'blue': {\n    r: 100,\n    g: 100,\n    b: 255\n  },\n  'red': {\n    r: 255,\n    g: 100,\n    b: 100\n  },\n  'green': {\n    r: 5,\n    g: 100,\n    b: 5\n  }\n};\nvar urls = ['./hero1.png', './hero.png', './hero2.png', './waterbear.png'];\nvar images = urls.map(function (url) {\n  return new Image();\n});\nimages.forEach(function (img, id) {\n  return img.src = urls[id];\n});\nvar rules = [{\n  name: 'blue',\n  alive: alive3,\n  rules: rules3,\n  image: images[0],\n  shadow: shadow['blue']\n}, {\n  name: 'red',\n  alive: alive3,\n  rules: rules3,\n  image: images[1],\n  shadow: shadow['red']\n}, {\n  name: 'green',\n  alive: alive3,\n  rules: rules3,\n  image: images[2],\n  shadow: shadow['green']\n}];\nvar configs = {\n  urls: iconUrls,\n  descriptions: {\n    blue: 'супер быстрые',\n    red: 'супер сильные',\n    green: \"супер плодовитые\"\n  }\n};\n\nvar Game =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Game, _Component);\n\n  function Game(props) {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n    _this.state = {\n      statistics: []\n    };\n\n    _this.init = function () {\n      _this.resize();\n\n      _this.engine = Engine(_this._canvas.current);\n      rules.forEach(_this.engine.addConfig);\n\n      _this.engine.setLoot({\n        img: images[3]\n      });\n\n      _this.engine.initPower(200);\n\n      _this.change();\n\n      _this.engine.onMouse(function (x, y) {\n        return _this.props.sendMousePosition(_this.socket, x, y);\n      });\n    };\n\n    _this.resize = function () {\n      //const parent = this._canvas.current.parentElement;\n      //this._canvas.current.width = parent.clientWidth\n      //this._canvas.current.height = parent.clientHeight\n      _this._canvas.current.width = 500;\n      _this._canvas.current.height = 500;\n    };\n\n    _this.login = function () {\n      _this.change();\n\n      _this.props.Login();\n\n      _this.props.sendLoginInfo(_this.socket, _this.props.config);\n    };\n\n    _this.change = function () {\n      _this.engine.use(_this.props.race);\n    };\n\n    _this._canvas = createRef();\n    _this.engine = null;\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.init();\n      this.socket = io();\n      this.props.initSocket(this.socket, this.engine);\n      window.addEventListener('resize', this.init);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var statistics = this.state.statistics;\n      var color = shadow[this.props.race];\n      var stats = [{\n        race: 'blue',\n        url: iconUrls[0],\n        score: 26\n      }, {\n        race: 'red',\n        url: iconUrls[1],\n        score: 6\n      }, {\n        race: 'green',\n        url: iconUrls[2],\n        score: 120\n      }];\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(InitModal, {\n            isLogin: _this2.props.isLogin,\n            login: _this2.login,\n            configs: configs,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), React.createElement(BlurContainer, {\n        kernel: 14,\n        is: !this.props.isLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"h-100 w-100 background tools\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        ref: this._canvas,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(Statistics, {\n        list: stats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), React.createElement(Container, {\n        className: \"d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(GameBar, {\n        color: \"rgb(\".concat(color.r, \",\").concat(color.g, \",\").concat(color.b),\n        value: this.state.statistics,\n        url: iconObj[this.props.race],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Game;\n}(Component);\n/*\n*/\n//Вернуть и очень много работы с engine\n//  <Statistics color={`rgb(${color.r},${color.g},${color.b}`}  value={statistics[this.props.race]} list={statistics} urls = {iconUrls}/>\n// <Button  color='danger' onClick={this.toggle()}> on </Button>\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLogin: state.isLogin,\n    race: state.race,\n    config: {\n      race: state.race,\n      name: state.name\n    }\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    initSocket: function initSocket(socket, engine) {\n      return dispatch(_initSocket(socket, engine));\n    },\n    Login: function Login() {\n      return dispatch(login());\n    },\n    sendMousePosition: function sendMousePosition(socket, x, y) {\n      return dispatch(_sendMousePosition(socket, x, y));\n    },\n    sendLoginInfo: function sendLoginInfo(socket, config) {\n      return dispatch(_sendLoginInfo(socket, config));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Game));","map":{"version":3,"sources":["/home/efimenko/Рабочий стол/alive-empire-game/client/src/Game.js"],"names":["React","createRef","Component","Fragment","connect","Button","Container","io","Route","withRouter","Howl","Howler","Chat","Statistics","GameBar","BlurContainer","InitModal","initSocket","sendLoginInfo","login","sendMousePosition","Engine","playSounds","sounds","sound","src","autoplay","volume","alive1","x","rules1","prev","res","alive","alive3","rules3","alive2","rules2","iconUrls","iconObj","blue","red","green","shadow","r","g","b","urls","images","map","url","Image","forEach","img","id","rules","name","image","configs","descriptions","Game","props","state","statistics","init","resize","engine","_canvas","current","addConfig","setLoot","initPower","change","onMouse","y","socket","width","height","Login","config","use","race","window","addEventListener","color","stats","score","isLogin","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { createRef, Component, Fragment } from 'react';\nimport { connect } from 'react-redux'\nimport { Button, Container } from 'reactstrap'\nimport io from 'socket.io-client'\nimport { Route, withRouter } from 'react-router-dom'\nimport {Howl, Howler} from 'howler'\nimport './Game.css'\nimport {\n  Chat,\n  Statistics,\n  GameBar\n} from './modules'\nimport { \n  BlurContainer,\n} from './components'\n\nimport {\n  InitModal\n} from './containers'\n\nimport { \n  initSocket,\n  sendLoginInfo,\n  login,\n  sendMousePosition\n} from './actions'\n\nimport Engine from './engine'\n\n\nconst playSounds = () => {\n  const sounds = [\n    'music/Polyphia G.O.A.T. (Official Music Video).mp3',\n    'music/Polyphia – O.D..mp3',\n    'music/Polyphia - Crush.mp3'\n  ]\n  const sound = new Howl({\n    src:sounds,\n    autoplay: true,\n    volume: 0.9,\n  });\n}\n\n//playSounds()\n\n//rules for bonus \n  const alive1 = x => x >= 1\n\n  const rules1 = (prev, res, alive) => {\n    if (alive(prev)){\n      if (res ==  2 || res == 3 ){\n        return prev + 2\n      }\n      else {\n        return (res - prev < 0)\n      }\n    }\n    else{\n        return (res == 3)\n    }\n  }\n\n  const alive3 = x => x == 1\n\n  const rules3 = (prev, res, alive) => {\n    if (alive(prev)){\n      if (res == 2 || res == 3 ){\n        return 1\n      }\n      else {\n        return 0\n      }\n    }\n    else{\n        return (res == 3)\n    }\n  }\n\n  const alive2 = x => x >= 1\n\n  const rules2 = (prev, res, alive) => {\n    if (alive(prev)){\n      if (res == 1 || res == 4 ){\n        return prev + 1\n      }\n      else {\n        return (res - prev < 0)\n      }\n    }\n    else{\n        if (res == 4){\n        return 2\n      }\n      else {\n        return 0\n      }\n    }\n  }\n\n\n\nconst iconUrls = ['./icon1.png','./icon2.png','./icon3.png']\nconst iconObj = {blue:'./icon1.png',red:'./icon2.png',green:'./icon3.png'}\nconst shadow = {'blue':{r:100,g:100,b:255},'red':{r:255,g:100,b:100},'green':{r:5,g:100,b:5}}\nconst urls = ['./hero1.png', './hero.png', './hero2.png', './waterbear.png']\nconst images = urls.map( url => new Image())\nimages.forEach((img, id) => img.src = urls[id])\n\nconst rules = [{name:'blue',alive:alive3, rules:rules3,image: images[0],shadow:shadow['blue']}, {name:'red',alive:alive3, rules:rules3, image:images[1],shadow:shadow['red']}, {name:'green',alive:alive3, rules:rules3, image:images[2],shadow:shadow['green']}]\n\nconst configs = {\n  urls: iconUrls,\n  descriptions: {blue:'супер быстрые',red:'супер сильные',green:\"супер плодовитые\"}\n}\n\n\nclass Game extends Component {\nstate = {\n  statistics: [],\n}\nconstructor(props){\n   super(props)\n   this._canvas = createRef()\n   this.engine = null\n}\ncomponentDidMount(){\n  this.init()\n  this.socket = io()\n  this.props.initSocket(this.socket, this.engine)\n  window.addEventListener('resize', this.init)\n}\ninit = () => {\n  this.resize()\n  this.engine = Engine(this._canvas.current)\n  rules.forEach(this.engine.addConfig)\n  this.engine.setLoot({\n    img:images[3]\n  })\n  this.engine.initPower(200)\n  this.change()\n  this.engine.onMouse((x,y) => this.props.sendMousePosition(this.socket, x, y))\n}\n\nresize = () => {\n  //const parent = this._canvas.current.parentElement;\n  //this._canvas.current.width = parent.clientWidth\n  //this._canvas.current.height = parent.clientHeight\n  this._canvas.current.width = 500\n  this._canvas.current.height = 500\n}\n\nlogin = () => {\n  this.change()\n  this.props.Login()\n  this.props.sendLoginInfo(this.socket, this.props.config)\n}\n\nchange = () => {\n  this.engine.use(this.props.race)\n}\n\n  render(){\n    const { statistics } = this.state\n    const  color = shadow[this.props.race]\n    const stats = [\n      {race:'blue', url: iconUrls[0], score: 26},\n      {race:'red', url: iconUrls[1], score: 6},\n      {race:'green', url: iconUrls[2], score: 120}\n    ]\n    return (\n      <Fragment>\n        <Route exact path='/' render={ () => {\n            return <InitModal isLogin = {this.props.isLogin} login = {this.login} configs = {configs} />\n        }}/>\n        <BlurContainer  kernel={14} is={!this.props.isLogin}>\n          <div  className='h-100 w-100 background tools'>\n            <canvas  ref={this._canvas}/>\n            <Statistics list={stats}/>\n            <Container className='d-flex'>\n              <GameBar color={`rgb(${color.r},${color.g},${color.b}`}  value={this.state.statistics}  url={iconObj[this.props.race]} />\n            </Container>\n          </div>\n        </BlurContainer>\n      </Fragment>\n    )\n  }\n}\n\n\n/*\n*/\n//Вернуть и очень много работы с engine\n\n\n//  <Statistics color={`rgb(${color.r},${color.g},${color.b}`}  value={statistics[this.props.race]} list={statistics} urls = {iconUrls}/>\n// <Button  color='danger' onClick={this.toggle()}> on </Button>\n\nconst mapStateToProps = state => {\n  return {\n    isLogin: state.isLogin,\n    race: state.race,\n    config: {\n      race: state.race,\n      name: state.name\n    }\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initSocket: (socket, engine) => dispatch(initSocket(socket, engine)),\n    Login: () => dispatch(login()),\n    sendMousePosition: (socket, x, y) => dispatch(sendMousePosition(socket, x, y)),\n    sendLoginInfo: (socket, config) => dispatch(sendLoginInfo(socket, config)),\n  }\n}\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Game))\n\n"]},"metadata":{},"sourceType":"module"}