{"ast":null,"code":"import _toArray from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/node_modules/@babel/runtime/helpers/esm/toArray\";\nimport _toConsumableArray from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initConfig = {\n  alive: function alive(x) {\n    return x >= 1;\n  },\n  rules: function rules(x) {\n    return 0;\n  },\n  name: 'init'\n};\n\nvar argmax = function argmax(array) {\n  return array.map(function (x, i) {\n    return [x, i];\n  }).reduce(function (r, a) {\n    return a[0] > r[0] ? a : r;\n  })[1];\n};\n\nvar Engine = function Engine(canvas) {\n  var cellSize = 10;\n  var w = Math.floor(canvas.width / cellSize);\n  var h = Math.floor(canvas.height / cellSize);\n\n  var _ctx = canvas.getContext('2d');\n\n  var configs = [];\n\n  var _alive;\n\n  var _rules;\n\n  var count = 0;\n  var _currentLaw = 0;\n  var statistics = [];\n  var loot = [];\n\n  var addConfig = function addConfig(config) {\n    configs.push(_objectSpread({}, config, {\n      id: count++\n    }));\n  };\n\n  var setConfig = function setConfig(id) {\n    var _configs$id = configs[id],\n        alive = _configs$id.alive,\n        rules = _configs$id.rules;\n    _alive = alive;\n    _rules = rules;\n    _currentLaw = id;\n  };\n\n  addConfig(initConfig);\n  setConfig(_currentLaw);\n\n  var lootSpawn = function lootSpawn() {\n    var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1000;\n\n    var spawn = function spawn() {\n      console.log('spawn');\n      lootSpawn(time);\n    };\n\n    setTimeout(spawn, Math.random() * time);\n  };\n\n  var interection = function interection(x, y) {\n    var epsil = 30;\n    loot.forEach(function (l) {\n      return Math.abs(l.x - x) + Math.abs(l.y - y) < epsil ? console.log(l) : 0;\n    });\n  };\n\n  var drawing = function drawing() {\n    var _cords = cords,\n        x = _cords.x,\n        y = _cords.y;\n    world[x + y * w].setState(1);\n    world[x + y * w].setLaw(_currentLaw);\n    draw(x, y);\n  };\n\n  var init = function init() {\n    lootSpawn(3000); // удалить интервал\n\n    canvas.addEventListener('mousemove', function (event) {\n      var _getCords = getCords(event),\n          x = _getCords.x,\n          y = _getCords.y;\n\n      cords = {\n        x: Math.floor(x / cellSize),\n        y: Math.floor(y / cellSize)\n      };\n      intersection(cords.x, cords.y);\n    });\n    canvas.addEventListener('mousedown', function (event) {\n      drawing();\n      canvas.addEventListener('mousemove', drawing);\n    });\n    canvas.addEventListener('mouseup', function () {\n      canvas.removeEventListener('mousemove', drawing);\n    });\n  };\n\n  init();\n\n  var Cell = function Cell(state) {\n    var law = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return function (index) {\n      var j = Math.floor(index / w);\n      var i = index % w;\n      var _law = law;\n\n      var c = function c(i, j) {\n        var _i = i < 0 ? w + i : i < w ? i : w - i;\n\n        var _j = j < 0 ? h + j : j < h ? j : h - j;\n\n        return _i + _j * w;\n      };\n\n      var _state = state;\n\n      var setState = function setState(s) {\n        return _state = s;\n      };\n\n      var getState = function getState() {\n        return _state;\n      };\n\n      var setLaw = function setLaw(l) {\n        return _law = l;\n      };\n\n      var getLaw = function getLaw() {\n        return _law;\n      };\n\n      var siblings = function siblings() {\n        return [world[c(i - 1, j - 1)], world[c(i - 1, j)], world[c(i - 1, j + 1)], world[c(i, j - 1)], world[c(i, j + 1)], world[c(i + 1, j - 1)], world[c(i + 1, j)], world[c(i + 1, j + 1)]];\n      };\n\n      return {\n        getState: getState,\n        siblings: siblings,\n        index: index,\n        getLaw: getLaw,\n        setState: setState,\n        setLaw: setLaw\n      };\n    };\n  };\n\n  var world = _toConsumableArray(Array(w * h).keys()).map(Cell(0));\n\n  var cords = {};\n\n  var getCords = function getCords(event) {\n    return {\n      x: event.pageX - canvas.offsetLeft,\n      y: event.pageY - canvas.offsetTop\n    };\n  };\n\n  var Law = function Law(sibl) {\n    var m = Array(configs.length).fill(0);\n    sibl.forEach(function (sib) {\n      return _alive(sib.getState()) ? m[sib.getLaw()]++ : 0;\n    });\n\n    var _m = _toArray(m),\n        res = _m.slice(1);\n\n    return res.reduce(function (a, r) {\n      return a + r;\n    }, 0) ? argmax(res) + 1 : 0;\n  };\n\n  var next = function next(cell) {\n    var prev = cell.getState();\n    var siblings = cell.siblings();\n    var law = Law(siblings);\n    setConfig(law);\n    if (_alive(cell.getState())) statistics[law]++;\n    var res = siblings.reduce(function (a, x) {\n      return a + x.getState();\n    }, 0);\n    return Cell(_rules(prev, res, _alive), law)(cell.index);\n  };\n\n  var epoch = function epoch() {\n    statistics = Array(configs.length).fill(0);\n    world = world.map(next);\n  };\n\n  var use = function use(id) {\n    setConfig(id);\n  };\n\n  var draw = function draw(i, j) {\n    var cell = world[i + j * w];\n    var state = cell.getState();\n    var id = cell.getLaw();\n    var image = configs[id].image;\n    if (image) _ctx.drawImage(image, i * cellSize, j * cellSize);\n  };\n\n  var draw1 = function draw1(i, j) {\n    var cell = world[i + j * w];\n    var id = cell.getLaw();\n    var shadow = configs[id].shadow;\n\n    if (shadow) {\n      _ctx.beginPath();\n\n      _ctx.fillStyle = \"rgba(\".concat(shadow.r, \",\").concat(shadow.g, \",\").concat(shadow.b, \",0.1)\");\n\n      _ctx.arc((i + 0.8) * cellSize, (j + 0.8) * cellSize, cellSize * 2, 0, 2 * Math.PI); //\t_ctx.fillRect(i*cellSize, j*cellSize, cellSize, cellSize)\n\n\n      _ctx.fill();\n    }\n  };\n\n  var render = function render() {\n    epoch();\n\n    _ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    for (var i = 0; i < w; ++i) {\n      for (var j = 0; j < h; ++j) {\n        if (_alive(world[i + j * w].getState())) {\n          draw(i, j);\n        } else {\n          draw1(i, j);\n        }\n      }\n    }\n  };\n\n  var getStatistics = function getStatistics() {\n    return statistics.slice(1);\n  };\n\n  return {\n    render: render,\n    addConfig: addConfig,\n    use: use,\n    getStatistics: getStatistics\n  };\n};\n\nexport default Engine;","map":{"version":3,"sources":["/home/efimenko/Рабочий стол/alive-empire-game/src/engine/index.js"],"names":["initConfig","alive","x","rules","name","argmax","array","map","i","reduce","r","a","Engine","canvas","cellSize","w","Math","floor","width","h","height","_ctx","getContext","configs","_alive","_rules","count","_currentLaw","statistics","loot","addConfig","config","push","id","setConfig","lootSpawn","time","spawn","console","log","setTimeout","random","interection","y","epsil","forEach","l","abs","drawing","cords","world","setState","setLaw","draw","init","addEventListener","event","getCords","intersection","removeEventListener","Cell","state","law","index","j","_law","c","_i","_j","_state","s","getState","getLaw","siblings","Array","keys","pageX","offsetLeft","pageY","offsetTop","Law","sibl","m","length","fill","sib","res","next","cell","prev","epoch","use","image","drawImage","draw1","shadow","beginPath","fillStyle","g","b","arc","PI","render","clearRect","getStatistics","slice"],"mappings":"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","sourcesContent":["\nconst initConfig = {\n\talive: x => x >= 1,\n\trules: x => 0,\n\tname: 'init'\n}\n\nconst argmax = array => array.map((x, i) => [x, i]).reduce((r, a) => (a[0] > r[0] ? a : r))[1];\n\nconst Engine = (canvas) => {\n\tconst cellSize = 10;\n\tconst w = Math.floor(canvas.width / cellSize)\n\tconst h = Math.floor(canvas.height / cellSize)\n\tconst _ctx = canvas.getContext('2d')\n\tconst configs = []\n\tlet _alive;\n\tlet _rules;\n\tlet count = 0\n\tlet _currentLaw = 0;\n\tlet statistics = []\n\tlet loot = []\n\t\n\tconst addConfig = (config) => {\n\t\tconfigs.push({ ...config, id: count++ })\n\t}\n\tconst setConfig = (id) => {\n\t\tconst { alive, rules} = configs[id]\n\t\t_alive = alive;\n\t\t_rules = rules\n\t\t_currentLaw = id\n\t}\n\n\n\taddConfig(initConfig)\n\tsetConfig(_currentLaw)\n\n\tconst lootSpawn = (time = 1000) => {\n\t\tconst spawn = () => {\n\t\t\t\tconsole.log('spawn')\n\t\t\t\tlootSpawn(time)\n\t\t}\n\t\tsetTimeout(spawn, Math.random() * time)\n\t}\n\n\tconst interection = (x, y) => {\n\t\tconst epsil = 30;\n\t\tloot.forEach(l => ((Math.abs(l.x - x) + Math.abs(l.y - y)) < epsil) ? console.log(l): 0)\n\t}\n\tconst drawing = () => {\n\t\tconst {x ,y} = cords;\n\t\tworld[x + y * w].setState(1)\n\t\tworld[x + y * w].setLaw(_currentLaw)\n\t\tdraw(x, y)\n\t}\n\t\tconst init = () => {\n\t\tlootSpawn(3000)\n\t\t// удалить интервал\n\t\tcanvas.addEventListener('mousemove',(event) =>{\n\t\t\tconst {x, y} = getCords(event)\n\t\t\tcords = {x: Math.floor(x / cellSize), y: Math.floor(y / cellSize)}\n\t\t\tintersection(cords.x, cords.y)\n\t\t});\n\t\tcanvas.addEventListener('mousedown',(event) =>{\n\t\t\tdrawing()\n\t\t\tcanvas.addEventListener('mousemove', drawing);\n\t\t});\n\t\tcanvas.addEventListener('mouseup', () => {\n\t\t\tcanvas.removeEventListener('mousemove',drawing);\n\t\t});\n\t}\n\tinit()\n\n\tconst Cell = (state, law = 0) => (index) => {\n\t\tconst j = Math.floor(index / w)\n\t\tconst i = index % w\n\t\tlet _law = law;\n\t\tconst c = (i, j) => {\n\t\t\tconst _i = i < 0 ? w + i: i < w ? i : w - i\n\t\t\tconst _j = j < 0 ? h + j: j < h ? j : h - j\n\t\t\treturn _i + _j * w\n\t\t}\n\t\tlet _state = state;\n\t\tconst setState = (s) => _state = s\n\t\tconst getState = () => _state\n\t\tconst setLaw = (l) => _law = l \n\t\tconst getLaw = () => _law\n\t\tconst siblings = () => [\n\t\t\tworld[c(i - 1, j - 1)],\n\t\t\tworld[c(i - 1, j)],\n\t\t\tworld[c(i - 1, j + 1)],\n\t\t\tworld[c(i, j - 1)],\n\t\t\tworld[c(i, j + 1)],\n\t\t\tworld[c(i + 1, j - 1)],\n\t\t\tworld[c(i + 1, j)],\n\t\t\tworld[c(i + 1, j + 1)]\n\t\t] \n\t\treturn {\n\t\t\tgetState,\n\t\t\tsiblings,\n\t\t\tindex,\n\t\t\tgetLaw,\n\t\t\tsetState,\n\t\t\tsetLaw\n\t\t}\n\t}\n\tlet world = [...Array(w * h).keys()].map(Cell(0))\n\tlet cords = {}\n\t\n\tconst getCords = event => {\n\t\treturn {\n\t\t\tx:event.pageX - canvas.offsetLeft,\n\t\t\ty:event.pageY - canvas.offsetTop\n\t\t}\n\t}\n\tconst Law = sibl => {\n\t\tconst m = Array(configs.length).fill(0)\n\t\tsibl.forEach(sib => _alive(sib.getState()) ?  m[sib.getLaw()]++: 0)\n\t\tconst [, ...res] = m\n\t\treturn res.reduce((a,r) => a + r, 0) ? argmax(res) + 1: 0\n\t}\n\n\tconst next = (cell) => {\n\t\tconst prev = cell.getState()\n\t\tconst siblings = cell.siblings()\n\t\tconst law = Law(siblings)\n\t\tsetConfig(law)\n\t\tif (_alive(cell.getState())) statistics[law]++\n\t\tconst res = siblings.reduce((a, x) => a + x.getState(), 0)\n\t\treturn Cell(_rules(prev, res, _alive), law)(cell.index)\n\t}\n\n\tconst epoch = () => {\n\t\tstatistics = Array(configs.length).fill(0)\n\t\tworld = world.map(next)\n\t}\n\tconst use = id => {\n\t\tsetConfig(id)\n\t}\n\n\tconst draw = (i, j) => {\n\t\tconst cell = world[i + j * w]\n\t\tconst state = cell.getState()\n\t\tconst id = cell.getLaw()\n\t\tconst image = configs[id].image\n\t\tif (image) _ctx.drawImage(image, i * cellSize, j * cellSize)\t\n\t}\nconst draw1 = (i, j) => {\n\t\tconst cell = world[i + j * w]\n\t\tconst id = cell.getLaw()\n\t\tconst shadow = configs[id].shadow\n\t\tif (shadow){\n\t\t\t_ctx.beginPath()\n\t\t\t_ctx.fillStyle = `rgba(${shadow.r},${shadow.g},${shadow.b},0.1)`\n\t\t\t_ctx.arc((i + 0.8)*cellSize, (j + 0.8)*cellSize, cellSize*2, 0, 2*Math.PI)\n\t\t//\t_ctx.fillRect(i*cellSize, j*cellSize, cellSize, cellSize)\n\t\t\t_ctx.fill()\n\t\t}\t\n\t}\n\n\tconst render = () =>  {\n\t\tepoch()\n\t\t_ctx.clearRect(0, 0, canvas.width, canvas.height)\n\t\tfor (let i = 0; i < w; ++i){\n\t\t\tfor (let j = 0; j < h; ++j){\n\t\t\t\tif (_alive(world[i + j*w].getState())) {\n\t\t\t\t\tdraw(i,j)\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tdraw1(i,j)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tconst getStatistics = () => statistics.slice(1)\n\treturn {\n\t\trender,\n\t\taddConfig,\n\t\tuse,\n\t\tgetStatistics\n\t}\n}\n\n\n\n\nexport default Engine\n\n"]},"metadata":{},"sourceType":"module"}