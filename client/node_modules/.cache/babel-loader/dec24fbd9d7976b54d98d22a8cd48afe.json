{"ast":null,"code":"import _toConsumableArray from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _readOnlyError from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\n\nvar Engine = function Engine(canvas, config) {\n  var w = canvas.width;\n  var h = canvas.height;\n\n  var _ctx = canvas.getContext('2d');\n\n  var cellSize = 5;\n\n  var Cell = function Cell(state) {\n    return function (index) {\n      var j = Math.floor(index / w);\n      var i = index % w;\n\n      var c = function c(i, j) {\n        var _i = i < 0 ? 0 : i < w ? i : w - i;\n\n        var _j = j < 0 ? 0 : j < h ? j : h - j;\n\n        return _i + _j * w;\n      };\n\n      var _state = state;\n\n      var setState = function setState(s) {\n        return _state = (_readOnlyError(\"_state\"), s);\n      };\n\n      var getState = function getState() {\n        return _state;\n      };\n\n      var siblings = function siblings() {\n        return [world[c(i - 1, j - 1)], world[c(i - 1, j)], world[c(i - 1, j + 1)], world[c(i, j - 1)], world[c(i, j + 1)], world[c(i + 1, j - 1)], world[c(i + 1, j)], world[c(i + 1, j + 1)]];\n      };\n\n      return {\n        getState: getState,\n        siblings: siblings,\n        index: index,\n        setState: setState\n      };\n    };\n  };\n\n  var world = _toConsumableArray(Array(w * h).keys()).map(Cell(0));\n\n  var cords = {};\n\n  var getCords = function getCords(event) {\n    return {\n      x: event.pageX - canvas.offsetLeft,\n      y: event.pageY - canvas.offsetTop\n    };\n  };\n\n  var drawing = function drawing() {\n    var _cords = cords,\n        x = _cords.x,\n        y = _cords.y;\n    draw(x, y);\n    world[x + y * w].setState(1);\n  };\n\n  var init = function init() {\n    canvas.addEventListener('mousemove', function (event) {\n      var _getCords = getCords(event),\n          x = _getCords.x,\n          y = _getCords.y;\n\n      cords = {\n        x: Math.floor(x / cellSize),\n        y: Math.floor(y / cellSize)\n      };\n    });\n    canvas.addEventListener('mousedown', function (event) {\n      drawing();\n      canvas.addEventListener('mousemove', drawing);\n    });\n    canvas.addEventListener('mouseup', function () {\n      canvas.removeEventListener('mousemove', drawing);\n    });\n  };\n\n  var rules = function rules(prev, res) {\n    return res === 2 || res === 3;\n  };\n\n  var next = function next(cell) {\n    var prev = cell.getState();\n\n    var res = _dot(cell.siblings(), _toConsumableArray(Array(8).fill(1)));\n\n    return Cell(rules(prev, res))(cell.index);\n  };\n\n  var epoch = function epoch() {\n    world = world.map(next);\n  };\n\n  var _dot = function _dot(v1, v2) {\n    return v1.reduce(function (a, x, i) {\n      return a + x * v2[i];\n    });\n  };\n\n  var draw = function draw(i, j) {\n    var state = world[i + j * w].getState();\n\n    _ctx.beginPath();\n\n    _ctx.fillStyle = \"rgb(\".concat(state * 100, \",\").concat(state * 50, \",\").concat(state * 30, \")\");\n\n    _ctx.arc(i * cellSize, j * cellSize, cellSize, 0, 2 * Math.PI);\n\n    _ctx.fill();\n  };\n\n  var render = function render() {\n    epoch();\n\n    _ctx.clearRect(0, 0, w, h);\n\n    for (var i = 0; i < w; ++i) {\n      for (var j = 0; j < h; ++j) {\n        draw(i, j);\n      }\n    }\n\n    requestAnimationFrame(render);\n  };\n\n  return {\n    render: render\n  };\n};\n\nexport default Engine;","map":{"version":3,"sources":["/home/efimenko/Рабочий стол/alive-empire-game/src/engine/index.js"],"names":["Engine","canvas","config","w","width","h","height","_ctx","getContext","cellSize","Cell","state","index","j","Math","floor","i","c","_i","_j","_state","setState","s","getState","siblings","world","Array","keys","map","cords","getCords","event","x","pageX","offsetLeft","y","pageY","offsetTop","drawing","draw","init","addEventListener","removeEventListener","rules","prev","res","next","cell","_dot","fill","epoch","v1","v2","reduce","a","beginPath","fillStyle","arc","PI","render","clearRect","requestAnimationFrame"],"mappings":"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","sourcesContent":["\n\nconst Engine = (canvas, config) => {\n\tconst w = canvas.width\n\tconst h = canvas.height\n\tconst _ctx = canvas.getContext('2d')\n\tconst cellSize = 5\n\n\tconst Cell = (state) => (index) => {\n\t\tconst j = Math.floor(index / w)\n\t\tconst i = index % w\n\t\tconst c = (i, j) => {\n\t\t\tconst _i = i < 0 ? 0: i < w ? i : w - i\n\t\t\tconst _j = j < 0 ? 0: j < h ? j : h - j\n\t\t\treturn _i + _j * w\n\t\t}\n\t\tconst _state = state;\n\t\tconst setState = (s) => _state = s\n\t\tconst getState = () => _state\n\t\tconst siblings = () => [\n\t\t\tworld[c(i - 1, j - 1)],\n\t\t\tworld[c(i - 1, j)],\n\t\t\tworld[c(i - 1, j + 1)],\n\t\t\tworld[c(i, j - 1)],\n\t\t\tworld[c(i, j + 1)],\n\t\t\tworld[c(i + 1, j - 1)],\n\t\t\tworld[c(i + 1, j)],\n\t\t\tworld[c(i + 1, j + 1)]\n\t\t]\n\t\treturn {\n\t\t\tgetState,\n\t\t\tsiblings,\n\t\t\tindex,\n\t\t\tsetState\n\t\t}\n\t}\n\n\tlet world = [...Array(w*h).keys()].map(Cell(0))\n\tlet cords = {}\n\tconst getCords = event => {\n\t\treturn {\n\t\t\tx:event.pageX - canvas.offsetLeft,\n\t\t\ty:event.pageY - canvas.offsetTop\n\t\t}\n\t}\n\n\tconst drawing = () => {\n\t\tconst {x ,y} = cords;\n\t\tdraw(x, y)\n\t\tworld[x + y * w].setState(1)\n\t}\n\n\tconst init = () => {\n\t\tcanvas.addEventListener('mousemove',(event) =>{\n\t\t\tconst {x, y} = getCords(event)\n\t\t\tcords = {x: Math.floor(x/cellSize), y: Math.floor(y/cellSize)}\n\t\t});\n\t\tcanvas.addEventListener('mousedown',(event) =>{\n\t\t\tdrawing()\n\t\t\tcanvas.addEventListener('mousemove', drawing);\n\t\t});\n\t\tcanvas.addEventListener('mouseup', () => {\n\t\t\tcanvas.removeEventListener('mousemove',drawing);\n\t\t});\n\t}\n\n\tconst rules = (prev, res) => {\n\t\treturn (res === 2 || res === 3)  \n\t}\n\tconst next = (cell) => {\n\t\tconst prev = cell.getState()\n\t\tconst res =  _dot(cell.siblings(), [...Array(8).fill(1)])\n\t\treturn Cell(rules(prev, res))(cell.index)\n\t}\n\n\tconst epoch = () => {\n\t\tworld = world.map(next)\n\t}\n\tconst _dot = (v1, v2) => v1.reduce((a, x, i) => a + x * v2[i])\n\t\n\tconst draw = (i, j) => {\n\t\tconst state = world[i + j*w].getState()\n\t\t_ctx.beginPath();\n\t\t_ctx.fillStyle = `rgb(${state*100},${state*50},${state*30})`\n\t\t_ctx.arc(i*cellSize,j*cellSize,cellSize,0,2 * Math.PI)\n\t\t_ctx.fill()\n\t}\n\n\tconst render = () => {\n\t\tepoch()\n\t\t_ctx.clearRect(0, 0, w, h)\n\t\tfor (let i = 0; i < w; ++i){\n\t\t\tfor (let j = 0; j < h; ++j){\n\t\t\t\tdraw(i,j)\n\t\t\t}\n\t\t}\n\t\trequestAnimationFrame(render)\n\t}\n\treturn {\n\t\trender\n\t}\n}\n\n\n\n\nexport default Engine\n\n"]},"metadata":{},"sourceType":"module"}