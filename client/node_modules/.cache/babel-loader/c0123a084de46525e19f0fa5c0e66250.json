{"ast":null,"code":"import _objectSpread from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { SELECT_RACE, SELECT_NAME, SET_POPULATION_SIZE, POST_MESSAGE, NEW_PLAYERS, ADD_SOCKET, LOGIN, LOGOUT, SHOW_STATISTICS } from '../constants';\nvar initState = {\n  race: 'red',\n  messages: {},\n  message: \"let's start\",\n  isLogin: false\n};\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SELECT_NAME:\n      return _objectSpread({}, state, {\n        name: action.payload\n      });\n\n    case SHOW_STATISTICS:\n      var _action$payload = action.payload,\n          power = _action$payload.power,\n          count = _action$payload.count;\n      return _objectSpread({}, state, {\n        power: power,\n        count: count\n      });\n\n    case LOGIN:\n      return _objectSpread({}, state, {\n        isLogin: true\n      });\n\n    case LOGOUT:\n      return _objectSpread({}, state, {\n        isLogin: false\n      });\n\n    case SELECT_RACE:\n      return _objectSpread({}, state, {\n        race: action.payload\n      });\n\n    case NEW_PLAYERS:\n      return _objectSpread({}, state, {\n        players: action.payload\n      });\n\n    case SET_POPULATION_SIZE:\n      return _objectSpread({}, state, {\n        population: action.payload\n      });\n\n    case POST_MESSAGE:\n      return _objectSpread({}, state, {\n        message: action.payload\n      });\n\n    case ADD_SOCKET:\n      return _objectSpread({}, state, {\n        socket: action.payload\n      });\n\n    case 'SHOW_MESSAGE':\n      var _action$payload2 = action.payload,\n          race = _action$payload2.race,\n          message = _action$payload2.message;\n\n      var messages = _objectSpread({}, state.messages);\n\n      messages[race] = message;\n      return _objectSpread({}, state, {\n        messages: messages\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport { rootReducer };","map":{"version":3,"sources":["/home/efimenko/Рабочий стол/alive-empire-game/client/src/reducers/index.js"],"names":["SELECT_RACE","SELECT_NAME","SET_POPULATION_SIZE","POST_MESSAGE","NEW_PLAYERS","ADD_SOCKET","LOGIN","LOGOUT","SHOW_STATISTICS","initState","race","messages","message","isLogin","rootReducer","state","action","type","name","payload","power","count","players","population","socket"],"mappings":";AAAA,SACCA,WADD,EAECC,WAFD,EAGCC,mBAHD,EAICC,YAJD,EAKCC,WALD,EAMCC,UAND,EAOCC,KAPD,EAQCC,MARD,EASCC,eATD,QAUO,cAVP;AAYA,IAAMC,SAAS,GAAG;AACjBC,EAAAA,IAAI,EAAE,KADW;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,OAAO,EAAE,aAHQ;AAIjBC,EAAAA,OAAO,EAAE;AAJQ,CAAlB;;AAOA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAA+B;AAAA,MAA9BC,KAA8B,uEAAtBN,SAAsB;AAAA,MAAXO,MAAW;;AAClD,UAAOA,MAAM,CAACC,IAAd;AACC,SAAKhB,WAAL;AACC,+BACIc,KADJ;AAECG,QAAAA,IAAI,EAAEF,MAAM,CAACG;AAFd;;AAID,SAAKX,eAAL;AAAA,4BAC6BQ,MAAM,CAACG,OADpC;AAAA,UACYC,KADZ,mBACYA,KADZ;AAAA,UACmBC,KADnB,mBACmBA,KADnB;AAEC,+BACIN,KADJ;AAECK,QAAAA,KAAK,EAAEA,KAFR;AAGCC,QAAAA,KAAK,EAAEA;AAHR;;AAKD,SAAKf,KAAL;AACC,+BACIS,KADJ;AAECF,QAAAA,OAAO,EAAE;AAFV;;AAID,SAAKN,MAAL;AACC,+BACIQ,KADJ;AAECF,QAAAA,OAAO,EAAE;AAFV;;AAID,SAAKb,WAAL;AACC,+BACIe,KADJ;AAECL,QAAAA,IAAI,EAAEM,MAAM,CAACG;AAFd;;AAID,SAAKf,WAAL;AACC,+BACIW,KADJ;AAECO,QAAAA,OAAO,EAAEN,MAAM,CAACG;AAFjB;;AAID,SAAKjB,mBAAL;AACC,+BACIa,KADJ;AAECQ,QAAAA,UAAU,EAAEP,MAAM,CAACG;AAFpB;;AAID,SAAKhB,YAAL;AACC,+BACIY,KADJ;AAECH,QAAAA,OAAO,EAAEI,MAAM,CAACG;AAFjB;;AAID,SAAKd,UAAL;AACC,+BACIU,KADJ;AAECS,QAAAA,MAAM,EAAER,MAAM,CAACG;AAFhB;;AAKD,SAAK,cAAL;AAAA,6BACyBH,MAAM,CAACG,OADhC;AAAA,UACQT,IADR,oBACQA,IADR;AAAA,UACcE,OADd,oBACcA,OADd;;AAEC,UAAMD,QAAQ,qBAAQI,KAAK,CAACJ,QAAd,CAAd;;AACAA,MAAAA,QAAQ,CAACD,IAAD,CAAR,GAAiBE,OAAjB;AACA,+BACIG,KADJ;AAECJ,QAAAA,QAAQ,EAAEA;AAFX;;AAID;AACC,aAAOI,KAAP;AA1DF;AA4DA,CA7DD;;AAgEA,SACCD,WADD","sourcesContent":["import {\n\tSELECT_RACE,\n\tSELECT_NAME,\n\tSET_POPULATION_SIZE,\n\tPOST_MESSAGE,\n\tNEW_PLAYERS,\n\tADD_SOCKET,\n\tLOGIN,\n\tLOGOUT,\n\tSHOW_STATISTICS\n} from '../constants'\n\nconst initState = {\n\trace: 'red',\n\tmessages: {},\n\tmessage: \"let's start\",\n\tisLogin: false\n}\n\nconst rootReducer = (state = initState, action) => {\n\tswitch(action.type){\n\t\tcase SELECT_NAME:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tname: action.payload\n\t\t\t}\n\t\tcase SHOW_STATISTICS:\n\t\t    const { power, count } = action.payload\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpower: power,\n\t\t\t\tcount: count\n\t\t\t}\n\t\tcase LOGIN:\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tisLogin: true\n\t\t\t}\n\t\tcase LOGOUT:\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tisLogin: false\n\t\t\t}\n\t\tcase SELECT_RACE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trace: action.payload\n\t\t\t}\n\t\tcase NEW_PLAYERS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tplayers: action.payload\n\t\t\t}\n\t\tcase SET_POPULATION_SIZE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpopulation: action.payload\n\t\t\t}\n\t\tcase POST_MESSAGE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmessage: action.payload\n\t\t\t}\n\t\tcase ADD_SOCKET:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsocket: action.payload\n\t\t\t}\n\t\t\n\t\tcase 'SHOW_MESSAGE':\n\t\t\tconst {race, message} = action.payload\n\t\t\tconst messages = { ...state.messages } \n\t\t\tmessages[race] = message\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tmessages: messages\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\n\nexport {\n\trootReducer\n}"]},"metadata":{},"sourceType":"module"}