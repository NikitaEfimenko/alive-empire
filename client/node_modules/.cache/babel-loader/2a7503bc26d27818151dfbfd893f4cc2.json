{"ast":null,"code":"import _classCallCheck from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/src/Game.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'reactstrap';\nimport { plus as _plus, minus as _minus } from './actions';\nimport './Game.css';\n\nvar Game =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Game, _Component);\n\n  function Game(props) {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n\n    _this.resize = function () {\n      var parent = _this._canvas.current.parentElement;\n      _this._canvas.current.width = parent.clientWidth;\n      _this._canvas.current.height = parent.clientHeight;\n    };\n\n    _this._canvas = React.createRef();\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.resize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \" \", this.props.count, \" \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.props.plus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"+\"), React.createElement(Button, {\n        onClick: this.props.minus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"-\")), React.createElement(\"div\", {\n        className: \"h-100 w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        ref: this._canvas,\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Game;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    count: state\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    plus: function plus() {\n      return dispatch(_plus());\n    },\n    minus: function minus() {\n      return dispatch(_minus());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","map":{"version":3,"sources":["/home/efimenko/Рабочий стол/alive-empire-game/src/Game.js"],"names":["React","Component","Fragment","connect","Button","plus","minus","Game","props","resize","parent","_canvas","current","parentElement","width","clientWidth","height","clientHeight","createRef","count","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SACEC,IAAI,IAAJA,KADF,EAEEC,KAAK,IAALA,MAFF,QAGO,WAHP;AAIA,OAAO,YAAP;;IAEMC,I;;;;;AACN,gBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACf,8EAAMA,KAAN;;AADe,UAQlBC,MARkB,GAQT,YAAM;AACb,UAAMC,MAAM,GAAG,MAAKC,OAAL,CAAaC,OAAb,CAAqBC,aAApC;AACA,YAAKF,OAAL,CAAaC,OAAb,CAAqBE,KAArB,GAA6BJ,MAAM,CAACK,WAApC;AACA,YAAKJ,OAAL,CAAaC,OAAb,CAAqBI,MAArB,GAA8BN,MAAM,CAACO,YAArC;AACD,KAZiB;;AAEf,UAAKN,OAAL,GAAeX,KAAK,CAACkB,SAAN,EAAf;AAFe;AAGjB;;;;wCACkB;AACjB,WAAKT,MAAL;AACD;;;6BAQO;AACN,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAO,KAAKD,KAAL,CAAWW,KAAlB,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKX,KAAL,CAAWH,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKG,KAAL,CAAWF,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CAFF,EAME;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAS,QAAA,GAAG,EAAE,KAAKK,OAAnB;AAA6B,QAAA,SAAS,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CANF,CADF;AAaD;;;;EA7BkBV,S;;AAgCnB,IAAMmB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLF,IAAAA,KAAK,EAAEE;AADF,GAAP;AAGD,CAJD;;AAKA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACrC,SAAO;AACLlB,IAAAA,IAAI,EAAE;AAAA,aAAMkB,QAAQ,CAAClB,KAAI,EAAL,CAAd;AAAA,KADD;AAELC,IAAAA,KAAK,EAAE;AAAA,aAAMiB,QAAQ,CAACjB,MAAK,EAAN,CAAd;AAAA;AAFF,GAAP;AAID,CALD;;AAOA,eAAeH,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cf,IAA7C,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux'\nimport { Button } from 'reactstrap'\nimport {\n  plus,\n  minus\n} from './actions'\nimport './Game.css'\n\nclass Game extends Component {\nconstructor(props){\n   super(props)\n   this._canvas = React.createRef()\n}\ncomponentDidMount(){\n  this.resize()\n}\n\nresize = () => {\n  const parent = this._canvas.current.parentElement;\n  this._canvas.current.width = parent.clientWidth\n  this._canvas.current.height = parent.clientHeight\n}\n\nrender(){\n  return (\n    <div>\n      <div> {this.props.count} </div>\n      <div>\n        <Button onClick={this.props.plus} >+</Button>\n        <Button onClick={this.props.minus}>-</Button>\n      </div>\n      <div  className='h-100 w-100'>\n        <canvas  ref={this._canvas}  className='game'>\n        </canvas>\n      </div>\n    </div>\n  )\n}\n}\n\nconst mapStateToProps = state => {\n  return {\n    count: state\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    plus: () => dispatch(plus()),\n    minus: () => dispatch(minus())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n"]},"metadata":{},"sourceType":"module"}