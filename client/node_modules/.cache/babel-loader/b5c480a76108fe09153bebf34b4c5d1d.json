{"ast":null,"code":"var _jsxFileName = \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/src/modules/ClassSelector/index.js\";\nimport React, { Fragment, Component } from 'react';\nimport { Container, Input, Label } from 'reactstrap';\nimport './ClassSelector.css';\nimport { connect } from 'react-redux';\nimport { selectRace as _selectRace } from '../../actions';\n\nvar HeroCard = function HeroCard(_ref) {\n  var url = _ref.url,\n      onClick = _ref.onClick,\n      selected = _ref.selected;\n  var Selected = selected ? 'heroes_selected' : '';\n  return React.createElement(\"button\", {\n    onClick: onClick,\n    className: \"heroes \".concat(Selected),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    width: \"100px\",\n    height: \"100px\",\n    src: url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }));\n}; //здесь имена надо сделать\n\n\nvar ClassSelector = function ClassSelector(props) {\n  var choice = function choice(id) {\n    return function () {\n      return props.selectRace(id);\n    };\n  };\n\n  var configs = props.configs,\n      description = props.description;\n  var urls = configs.urls,\n      descriptions = configs.descriptions;\n  return React.createElement(Container, {\n    className: \"class-selector\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Container, {\n    className: \"class-selector__classes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, urls.map(function (url, id) {\n    return React.createElement(HeroCard, Object.assign({\n      onClick: choice(id)\n    }, [id === props.id ? selected : null], {\n      key: id,\n      url: url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n  })), description && React.createElement(Container, {\n    className: \"class-selector__description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, descriptions[props.id])));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    id: state && state.race // fool\n\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    selectRace: function selectRace(name) {\n      return dispatch(_selectRace(name));\n    }\n  };\n};\n\nvar ConnectedComponent = connect(mapStateToProps, mapDispatchToProps)(ClassSelector);\nexport { ConnectedComponent as ClassSelector };","map":{"version":3,"sources":["/home/efimenko/Рабочий стол/alive-empire-game/src/modules/ClassSelector/index.js"],"names":["React","Fragment","Component","Container","Input","Label","connect","selectRace","HeroCard","url","onClick","selected","Selected","ClassSelector","props","choice","id","configs","description","urls","descriptions","map","mapStateToProps","state","race","mapDispatchToProps","dispatch","name","ConnectedComponent"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from 'react'\nimport {Container, Input, Label } from 'reactstrap'\nimport './ClassSelector.css'\nimport { connect } from 'react-redux'\nimport {\n\tselectRace\n} from '../../actions'\n\nconst HeroCard = ({ url, onClick, selected}) => {\n\tconst Selected = selected ? 'heroes_selected': ''\n\treturn(\n\t\t\t<button onClick={onClick} className={`heroes ${Selected}`}>\n\t\t\t\t<img width='100px' height='100px' src={url}/>\n\t\t\t</button>\n\t)\n}\n\n\n//здесь имена надо сделать\nconst  ClassSelector =  (props) => {\n\tconst choice = (id) => () => props.selectRace(id)\n\t\tconst { configs, description } = props\n\t\tconst { urls, descriptions } = configs\n\t\treturn (\n\t\t\t<Container className='class-selector'>\n\t\t\t\t<Container className='class-selector__classes'>\n\t\t\t\t\t{ urls.map((url, id) => <HeroCard onClick={choice(id)} {...[(id === props.id) ? selected: null]} key={id} url={url}/>)}\n\t\t\t\t</Container>\n\t\t\t\t{ description &&\n\t\t\t\t\t<Container className='class-selector__description'>\n\t\t\t\t\t\t<p>{descriptions[props.id]}</p>\n\t\t\t\t\t</Container>\n\t\t\t\t}\n\t\t\t</Container>\n\t\t)\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tid: state && state.race // fool\n\t}\n}\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\t\tselectRace: (name) =>  dispatch(selectRace(name))\n\t}\n}\n\nconst ConnectedComponent = connect(mapStateToProps, mapDispatchToProps)(ClassSelector)\n\nexport {\n\tConnectedComponent as ClassSelector\n}"]},"metadata":{},"sourceType":"module"}