{"ast":null,"code":"import _classCallCheck from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/efimenko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/alive-empire-game/src/Game.js\";\nimport React, { createRef, Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Container } from 'reactstrap';\nimport { plus, minus } from './actions';\nimport './Game.css';\nimport Engine from './engine'; //rules for bonus \n\nvar alive1 = function alive1(x) {\n  return x >= 1;\n};\n\nvar rules1 = function rules1(prev, res, alive) {\n  if (alive(prev)) {\n    if (res == 2 || res == 3) {\n      return prev + 2;\n    } else {\n      return res - prev < 0;\n    }\n  } else {\n    return res == 3;\n  }\n};\n\nvar alive3 = function alive3(x) {\n  return x == 1;\n};\n\nvar rules3 = function rules3(prev, res, alive) {\n  if (alive(prev)) {\n    if (res == 2 || res == 3) {\n      return 1;\n    } else {\n      return 0;\n    }\n  } else {\n    return res == 3;\n  }\n};\n\nvar alive2 = function alive2(x) {\n  return x >= 1;\n};\n\nvar rules2 = function rules2(prev, res, alive) {\n  if (alive(prev)) {\n    if (res == 1 || res == 4) {\n      return prev + 1;\n    } else {\n      return res - prev < 0;\n    }\n  } else {\n    if (res == 4) {\n      return 2;\n    } else {\n      return 0;\n    }\n  }\n};\n\nvar image1 = new Image();\nimage1.src = './hero.png';\nvar image2 = new Image();\nimage2.src = './hero1.png';\nvar image3 = new Image();\nimage3.src = './hero2.png';\nvar rules = [{\n  alive: alive1,\n  rules: rules1,\n  name: 'andromeda',\n  image: image1\n}, {\n  alive: alive2,\n  rules: rules2,\n  name: 'milkyway',\n  image: image2\n}, {\n  alive: alive3,\n  rules: rules3,\n  name: 'milsa',\n  image: image3\n}];\nconsole.log(rules.forEach(function (x) {\n  return x.image.src;\n}));\n\nvar Game =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Game, _Component);\n\n  function Game(props) {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n\n    _this.init = function () {\n      _this.resize();\n\n      _this.engine = Engine(_this._canvas.current);\n      rules.forEach(_this.engine.addConfig);\n    };\n\n    _this.resize = function () {\n      var parent = _this._canvas.current.parentElement;\n      _this._canvas.current.width = parent.clientWidth;\n      _this._canvas.current.height = parent.clientHeight;\n    };\n\n    _this.toggle = function () {\n      var isOn = false;\n      var id = null;\n      return function () {\n        isOn = !isOn;\n\n        if (isOn) {\n          id = setInterval(_this.engine.render, 70);\n        } else {\n          clearInterval(id);\n        }\n      };\n    };\n\n    _this.change = function (num) {\n      return function () {\n        _this.engine.use(num);\n      };\n    };\n\n    _this._canvas = createRef();\n    _this.engine = null;\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.init();\n      window.addEventListener('resize', this.init);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"h-100 w-100 background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        ref: this._canvas,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"danger\",\n        onClick: this.toggle(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \" on \"), React.createElement(Button, {\n        color: \"success\",\n        onClick: this.change(1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \" hero1 \"), React.createElement(Button, {\n        color: \"success\",\n        onClick: this.change(2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \" hero2 \"), React.createElement(Button, {\n        color: \"success\",\n        onClick: this.change(3),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \" hero3 \")));\n    }\n  }]);\n\n  return Game;\n}(Component);\n\nexport default Game;","map":{"version":3,"sources":["/home/efimenko/Рабочий стол/alive-empire-game/src/Game.js"],"names":["React","createRef","Component","Fragment","connect","Button","Container","plus","minus","Engine","alive1","x","rules1","prev","res","alive","alive3","rules3","alive2","rules2","image1","Image","src","image2","image3","rules","name","image","console","log","forEach","Game","props","init","resize","engine","_canvas","current","addConfig","parent","parentElement","width","clientWidth","height","clientHeight","toggle","isOn","id","setInterval","render","clearInterval","change","num","use","window","addEventListener"],"mappings":"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","sourcesContent":["import React, { createRef, Component, Fragment } from 'react';\nimport { connect } from 'react-redux'\nimport { Button, Container } from 'reactstrap'\nimport {\n  plus,\n  minus\n} from './actions'\nimport './Game.css'\nimport Engine from './engine'\n\n//rules for bonus \n  const alive1 = x => x >= 1\n\n  const rules1 = (prev, res, alive) => {\n    if (alive(prev)){\n      if (res ==  2 || res == 3 ){\n        return prev + 2\n      }\n      else {\n        return (res - prev < 0)\n      }\n    }\n    else{\n        return (res == 3)\n    }\n  }\n\n  const alive3 = x => x == 1\n\n  const rules3 = (prev, res, alive) => {\n    if (alive(prev)){\n      if (res == 2 || res == 3 ){\n        return 1\n      }\n      else {\n        return 0\n      }\n    }\n    else{\n        return (res == 3)\n    }\n  }\n\n  const alive2 = x => x >= 1\n\n  const rules2 = (prev, res, alive) => {\n    if (alive(prev)){\n      if (res == 1 || res == 4 ){\n        return prev + 1\n      }\n      else {\n        return (res - prev < 0)\n      }\n    }\n    else{\n        if (res == 4){\n        return 2\n      }\n      else {\n        return 0\n      }\n    }\n  }\n\n\nconst image1 = new Image()\nimage1.src = './hero.png'\n\nconst image2 = new Image()\nimage2.src = './hero1.png'\n\nconst image3 = new Image()\nimage3.src = './hero2.png'\n\nconst rules = [{alive:alive1, rules:rules1, name:'andromeda',image: image1}, {alive:alive2, rules:rules2,name:'milkyway', image:image2}, {alive:alive3, rules:rules3, name:'milsa',image:image3}]\nconsole.log(rules.forEach(x=>x.image.src))\n\nclass Game extends Component {\nconstructor(props){\n   super(props)\n   this._canvas = createRef()\n   this.engine = null\n}\ncomponentDidMount(){\n  this.init()\n  window.addEventListener('resize', this.init)\n}\ninit = () => {\n  this.resize()\n  this.engine = Engine(this._canvas.current)\n  rules.forEach(this.engine.addConfig)\n}\n\nresize = () => {\n  const parent = this._canvas.current.parentElement;\n  this._canvas.current.width = parent.clientWidth\n  this._canvas.current.height = parent.clientHeight\n}\n\ntoggle = () => {\n  let isOn = false;\n  let id = null\n  return () => {\n    isOn = !isOn\n    if (isOn) {\n      id = setInterval(this.engine.render, 70)\n    }\n    else{\n      clearInterval(id)\n    }\n  }\n}\n\nchange = (num) => () => {\n  this.engine.use(num)\n}\n\n\nrender(){\n  return (\n      <div  className='h-100 w-100 background'>\n        <canvas  ref={this._canvas}>\n        </canvas>\n        <Container>\n          <Button  color='danger' onClick={this.toggle()}> on </Button>\n          <Button  color='success' onClick={this.change(1)}> hero1 </Button>\n          <Button  color='success' onClick={this.change(2)}> hero2 </Button>\n          <Button  color='success' onClick={this.change(3)}> hero3 </Button>\n        </Container>\n      </div>\n  )\n}\n}\n\nexport default Game\n\n"]},"metadata":{},"sourceType":"module"}